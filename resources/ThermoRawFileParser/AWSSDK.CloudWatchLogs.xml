<?xml version="1.0"?>
<doc>
    <assembly>
        <name>AWSSDK.CloudWatchLogs</name>
    </assembly>
    <members>
        <member name="T:Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig">
            <summary>
            Configuration for accessing Amazon CloudWatchLogs service
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig.RegionEndpointServiceName">
            <summary>
            The constant used to lookup in the region hash the endpoint.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig.ServiceVersion">
            <summary>
            Gets the ServiceVersion property.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig.UserAgent">
            <summary>
            Gets the value of UserAgent property.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException">
            <summary>
             Common exception for the CloudWatchLogs service.
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException.#ctor(System.String)">
            <summary>
            Construct instance of AmazonCloudWatchLogsException
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchLogsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException.#ctor(System.Exception)">
            <summary>
            Construct instance of AmazonCloudWatchLogsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchLogsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of AmazonCloudWatchLogsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the AmazonCloudWatchLogsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchLogs.AmazonCloudWatchLogsRequest">
            <summary>
            Base class for CloudWatchLogs operation requests.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest">
            <summary>
            Container for the parameters to the AssociateKmsKey operation.
            Associates the specified AWS Key Management Service (AWS KMS) customer master key
            (CMK) with the specified log group.
            
             
            <para>
            Associating an AWS KMS CMK with a log group overrides any existing associations between
            the log group and a CMK. After a CMK is associated with a log group, all newly ingested
            data for the log group is encrypted using the CMK. This association is stored as long
            as the data encrypted with the CMK is still within Amazon CloudWatch Logs. This enables
            Amazon CloudWatch Logs to decrypt this data whenever it is requested.
            </para>
             
            <para>
            Note that it can take up to 5 minutes for this operation to take effect.
            </para>
             
            <para>
            If you attempt to associate a CMK with a log group but the CMK does not exist or the
            CMK is disabled, you will receive an <code>InvalidParameterException</code> error.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon Resource Name (ARN) of the CMK to use when encrypting log data. For more
            information, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms">Amazon
            Resource Names - AWS Key Management Service (AWS KMS)</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.AssociateKmsKeyResponse">
            <summary>
            This is the response object from the AssociateKmsKey operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CancelExportTaskRequest">
            <summary>
            Container for the parameters to the CancelExportTask operation.
            Cancels the specified export task.
            
             
            <para>
            The task must be in the <code>PENDING</code> or <code>RUNNING</code> state.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CancelExportTaskRequest.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the export task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CancelExportTaskResponse">
            <summary>
            This is the response object from the CancelExportTask operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest">
            <summary>
            Container for the parameters to the CreateExportTask operation.
            Creates an export task, which allows you to efficiently export data from a log group
            to an Amazon S3 bucket.
            
             
            <para>
            This is an asynchronous call. If all the required information is provided, this operation
            initiates an export task and responds with the ID of the task. After the task has
            started, you can use <a>DescribeExportTasks</a> to get the status of the export task.
            Each account can only have one active (<code>RUNNING</code> or <code>PENDING</code>)
            export task at a time. To cancel an export task, use <a>CancelExportTask</a>.
            </para>
             
            <para>
            You can export logs from multiple log groups or multiple time ranges to the same S3
            bucket. To separate out log data for each export task, you can specify a prefix to
            be used as the Amazon S3 key prefix for all exported objects.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The name of S3 bucket for the exported log data. The bucket must be in the same AWS
            region.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.DestinationPrefix">
            <summary>
            Gets and sets the property DestinationPrefix. 
            <para>
            The prefix used as the start of the key for every object exported. If you don't specify
            a value, the default is <code>exportedlogs</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.From">
            <summary>
            Gets and sets the property From. 
            <para>
            The start time of the range for the request, expressed as the number of milliseconds
            after Jan 1, 1970 00:00:00 UTC. Events with a time stamp earlier than this time are
            not exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.LogStreamNamePrefix">
            <summary>
            Gets and sets the property LogStreamNamePrefix. 
            <para>
            Export only log streams that match the provided prefix. If you don't specify a value,
            no prefix filter is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.TaskName">
            <summary>
            Gets and sets the property TaskName. 
            <para>
            The name of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskRequest.To">
            <summary>
            Gets and sets the property To. 
            <para>
            The end time of the range for the request, expressed as the number of milliseconds
            after Jan 1, 1970 00:00:00 UTC. Events with a time stamp later than this time are
            not exported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateExportTaskResponse">
            <summary>
            This is the response object from the CreateExportTask operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateExportTaskResponse.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the export task.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest">
            <summary>
            Container for the parameters to the CreateLogGroup operation.
            Creates a log group with the specified name.
            
             
            <para>
            You can create up to 5000 log groups per account.
            </para>
             
            <para>
            You must use the following guidelines when naming a log group:
            </para>
             <ul> <li> 
            <para>
            Log group names must be unique within a region for an AWS account.
            </para>
             </li> <li> 
            <para>
            Log group names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            Log group names consist of the following characters: a-z, A-Z, 0-9, '_' (underscore),
            '-' (hyphen), '/' (forward slash), and '.' (period).
            </para>
             </li> </ul> 
            <para>
            If you associate a AWS Key Management Service (AWS KMS) customer master key (CMK)
            with the log group, ingested data is encrypted using the CMK. This association is
            stored as long as the data encrypted with the CMK is still within Amazon CloudWatch
            Logs. This enables Amazon CloudWatch Logs to decrypt this data whenever it is requested.
            </para>
             
            <para>
            If you attempt to associate a CMK with the log group but the CMK does not exist or
            the CMK is disabled, you will receive an <code>InvalidParameterException</code> error.
            
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest.#ctor(System.String)">
            <summary>
            Instantiates CreateLogGroupRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon Resource Name (ARN) of the CMK to use when encrypting log data. For more
            information, see <a href="http://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html#arn-syntax-kms">Amazon
            Resource Names - AWS Key Management Service (AWS KMS)</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pairs to use for the tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateLogGroupResponse">
            <summary>
            This is the response object from the CreateLogGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateLogStreamRequest">
            <summary>
            Container for the parameters to the CreateLogStream operation.
            Creates a log stream for the specified log group.
            
             
            <para>
            There is no limit on the number of log streams that you can create for a log group.
            </para>
             
            <para>
            You must use the following guidelines when naming a log stream:
            </para>
             <ul> <li> 
            <para>
            Log stream names must be unique within the log group.
            </para>
             </li> <li> 
            <para>
            Log stream names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            The ':' (colon) and '*' (asterisk) characters are not allowed.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CreateLogStreamRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.CreateLogStreamRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates CreateLogStreamRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="logStreamName">The name of the log stream.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogStreamRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.CreateLogStreamRequest.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.CreateLogStreamResponse">
            <summary>
            This is the response object from the CreateLogStream operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException">
            <summary>
             CloudWatchLogs exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.#ctor(System.String)">
            <summary>
            Constructs a new DataAlreadyAcceptedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of DataAlreadyAcceptedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.#ctor(System.Exception)">
            <summary>
            Construct instance of DataAlreadyAcceptedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DataAlreadyAcceptedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of DataAlreadyAcceptedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the DataAlreadyAcceptedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDestinationRequest">
            <summary>
            Container for the parameters to the DeleteDestination operation.
            Deletes the specified destination, and eventually disables all the subscription filters
            that publish to it. This operation does not delete the physical resource encapsulated
            by the destination.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteDestinationRequest.DestinationName">
            <summary>
            Gets and sets the property DestinationName. 
            <para>
            The name of the destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteDestinationResponse">
            <summary>
            This is the response object from the DeleteDestination operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest">
            <summary>
            Container for the parameters to the DeleteLogGroup operation.
            Deletes the specified log group and permanently deletes all the archived log events
            associated with the log group.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteLogGroupRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteLogGroupResponse">
            <summary>
            This is the response object from the DeleteLogGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest">
            <summary>
            Container for the parameters to the DeleteLogStream operation.
            Deletes the specified log stream and permanently deletes all the archived log events
            associated with the log stream.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteLogStreamRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="logStreamName">The name of the log stream.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteLogStreamResponse">
            <summary>
            This is the response object from the DeleteLogStream operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest">
            <summary>
            Container for the parameters to the DeleteMetricFilter operation.
            Deletes the specified metric filter.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates DeleteMetricFilterRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="filterName">The name of the metric filter.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            The name of the metric filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteMetricFilterResponse">
            <summary>
            This is the response object from the DeleteMetricFilter operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest">
            <summary>
            Container for the parameters to the DeleteResourcePolicy operation.
            Deletes a resource policy from this account. This revokes the access of the identities
            in that policy to put log events to this account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the policy to be revoked. This parameter is required.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteResourcePolicyResponse">
            <summary>
            This is the response object from the DeleteResourcePolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest">
            <summary>
            Container for the parameters to the DeleteRetentionPolicy operation.
            Deletes the specified retention policy.
            
             
            <para>
            Log events do not expire if they belong to log groups without a retention policy.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest.#ctor(System.String)">
            <summary>
            Instantiates DeleteRetentionPolicyRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyResponse">
            <summary>
            This is the response object from the DeleteRetentionPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest">
            <summary>
            Container for the parameters to the DeleteSubscriptionFilter operation.
            Deletes the specified subscription filter.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            The name of the subscription filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterResponse">
            <summary>
            This is the response object from the DeleteSubscriptionFilter operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest">
            <summary>
            Container for the parameters to the DescribeDestinations operation.
            Lists all your destinations. The results are ASCII-sorted by destination name.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest.DestinationNamePrefix">
            <summary>
            Gets and sets the property DestinationNamePrefix. 
            <para>
            The prefix to match. If you don't specify a value, no prefix filter is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeDestinationsResponse">
            <summary>
            This is the response object from the DescribeDestinations operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsResponse.Destinations">
            <summary>
            Gets and sets the property Destinations. 
            <para>
            The destinations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeDestinationsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest">
            <summary>
            Container for the parameters to the DescribeExportTasks operation.
            Lists the specified export tasks. You can list all your export tasks or filter the
            results based on task ID or task status.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest.StatusCode">
            <summary>
            Gets and sets the property StatusCode. 
            <para>
            The status code of the export task. Specifying a status code filters the results to
            zero or more export tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the export task. Specifying a task ID filters the results to zero or one
            export tasks.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeExportTasksResponse">
            <summary>
            This is the response object from the DescribeExportTasks operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksResponse.ExportTasks">
            <summary>
            Gets and sets the property ExportTasks. 
            <para>
            The export tasks.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeExportTasksResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest">
            <summary>
            Container for the parameters to the DescribeLogGroups operation.
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest.LogGroupNamePrefix">
            <summary>
            Gets and sets the property LogGroupNamePrefix. 
            <para>
            The prefix to match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeLogGroupsResponse">
            <summary>
            This is the response object from the DescribeLogGroups operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsResponse.LogGroups">
            <summary>
            Gets and sets the property LogGroups. 
            <para>
            The log groups.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogGroupsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest">
            <summary>
            Container for the parameters to the DescribeLogStreams operation.
            Lists the log streams for the specified log group. You can list all the log streams
            or filter the results by prefix. You can also control how the results are ordered.
            
             
            <para>
            This operation has a limit of five transactions per second, after which transactions
            are throttled.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeLogStreamsRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.Descending">
            <summary>
            Gets and sets the property Descending. 
            <para>
            If the value is true, results are returned in descending order. If the value is to
            false, results are returned in ascending order. The default value is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.LogStreamNamePrefix">
            <summary>
            Gets and sets the property LogStreamNamePrefix. 
            <para>
            The prefix to match.
            </para>
             
            <para>
            iIf <code>orderBy</code> is <code>LastEventTime</code>,you cannot specify this parameter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest.OrderBy">
            <summary>
            Gets and sets the property OrderBy. 
            <para>
            If the value is <code>LogStreamName</code>, the results are ordered by log stream
            name. If the value is <code>LastEventTime</code>, the results are ordered by the event
            time. The default value is <code>LogStreamName</code>.
            </para>
             
            <para>
            If you order the results by event time, you cannot specify the <code>logStreamNamePrefix</code>
            parameter.
            </para>
             
            <para>
            lastEventTimestamp represents the time of the most recent log event in the log stream
            in CloudWatch Logs. This number is expressed as the number of milliseconds after Jan
            1, 1970 00:00:00 UTC. lastEventTimeStamp updates on an eventual consistency basis.
            It typically updates in less than an hour from ingestion, but may take longer in some
            rare situations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeLogStreamsResponse">
            <summary>
            This is the response object from the DescribeLogStreams operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsResponse.LogStreams">
            <summary>
            Gets and sets the property LogStreams. 
            <para>
            The log streams.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeLogStreamsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest">
            <summary>
            Container for the parameters to the DescribeMetricFilters operation.
            Lists the specified metric filters. You can list all the metric filters or filter
            the results by log name, prefix, metric name, or metric namespace. The results are
            ASCII-sorted by filter name.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.#ctor(System.String)">
            <summary>
            Instantiates DescribeMetricFiltersRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.FilterNamePrefix">
            <summary>
            Gets and sets the property FilterNamePrefix. 
            <para>
            The prefix to match.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.MetricName">
            <summary>
            Gets and sets the property MetricName.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.MetricNamespace">
            <summary>
            Gets and sets the property MetricNamespace. 
            <para>
            The namespace of the CloudWatch metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersResponse">
            <summary>
            This is the response object from the DescribeMetricFilters operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersResponse.MetricFilters">
            <summary>
            Gets and sets the property MetricFilters. 
            <para>
            The metric filters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeMetricFiltersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest">
            <summary>
            Container for the parameters to the DescribeResourcePolicies operation.
            Lists the resource policies in this account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of resource policies to be displayed with one call of this API.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesResponse">
            <summary>
            This is the response object from the DescribeResourcePolicies operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesResponse.ResourcePolicies">
            <summary>
            Gets and sets the property ResourcePolicies. 
            <para>
            The resource policies that exist in this account.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest">
            <summary>
            Container for the parameters to the DescribeSubscriptionFilters operation.
            Lists the subscription filters for the specified log group. You can list all the subscription
            filters or filter the results by prefix. The results are ASCII-sorted by filter name.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest.FilterNamePrefix">
            <summary>
            Gets and sets the property FilterNamePrefix. 
            <para>
            The prefix to match. If you don't specify a value, no prefix filter is applied.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of items returned. If you don't specify a value, the default is
            up to 50 items.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersResponse">
            <summary>
            This is the response object from the DescribeSubscriptionFilters operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersResponse.NextToken">
            <summary>
            Gets and sets the property NextToken.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersResponse.SubscriptionFilters">
            <summary>
            Gets and sets the property SubscriptionFilters. 
            <para>
            The subscription filters.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Destination">
            <summary>
            Represents a cross-account destination that receives subscription log events.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.AccessPolicy">
            <summary>
            Gets and sets the property AccessPolicy. 
            <para>
            An IAM policy document that governs which AWS accounts can create subscription filters
            against this destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The ARN of this destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the destination, expressed as the number of milliseconds after
            Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.DestinationName">
            <summary>
            Gets and sets the property DestinationName. 
            <para>
            The name of the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            A role for impersonation, used when delivering log events to the target.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Destination.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The Amazon Resource Name (ARN) of the physical target to where the log events are
            delivered (for example, a Kinesis stream).
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest">
            <summary>
            Container for the parameters to the DisassociateKmsKey operation.
            Disassociates the associated AWS Key Management Service (AWS KMS) customer master
            key (CMK) from the specified log group.
            
             
            <para>
            After the AWS KMS CMK is disassociated from the log group, AWS CloudWatch Logs stops
            encrypting newly ingested data for the log group. All previously ingested data remains
            encrypted, and AWS CloudWatch Logs requires permissions for the CMK whenever the encrypted
            data is requested.
            </para>
             
            <para>
            Note that it can take up to 5 minutes for this operation to take effect.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.DisassociateKmsKeyResponse">
            <summary>
            This is the response object from the DisassociateKmsKey operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ExportTask">
            <summary>
            Represents an export task.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The name of Amazon S3 bucket to which the log data was exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.DestinationPrefix">
            <summary>
            Gets and sets the property DestinationPrefix. 
            <para>
            The prefix that was used as the start of Amazon S3 key for every object exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.ExecutionInfo">
            <summary>
            Gets and sets the property ExecutionInfo. 
            <para>
            Execution info about the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.From">
            <summary>
            Gets and sets the property From. 
            <para>
            The start time, expressed as the number of milliseconds after Jan 1, 1970 00:00:00
            UTC. Events with a time stamp before this time are not exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group from which logs data was exported.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.Status">
            <summary>
            Gets and sets the property Status. 
            <para>
            The status of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.TaskId">
            <summary>
            Gets and sets the property TaskId. 
            <para>
            The ID of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.TaskName">
            <summary>
            Gets and sets the property TaskName. 
            <para>
            The name of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTask.To">
            <summary>
            Gets and sets the property To. 
            <para>
            The end time, expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
            Events with a time stamp later than this time are not exported.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ExportTaskExecutionInfo">
            <summary>
            Represents the status of an export task.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTaskExecutionInfo.CompletionTime">
            <summary>
            Gets and sets the property CompletionTime. 
            <para>
            The completion time of the export task, expressed as the number of milliseconds after
            Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTaskExecutionInfo.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the export task, expressed as the number of milliseconds after
            Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ExportTaskStatus">
            <summary>
            Represents the status of an export task.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTaskStatus.Code">
            <summary>
            Gets and sets the property Code. 
            <para>
            The status code of the export task.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ExportTaskStatus.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The status message related to the status code.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.FilteredLogEvent">
            <summary>
            Represents a matched event.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilteredLogEvent.EventId">
            <summary>
            Gets and sets the property EventId. 
            <para>
            The ID of the event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilteredLogEvent.IngestionTime">
            <summary>
            Gets and sets the property IngestionTime. 
            <para>
            The time the event was ingested, expressed as the number of milliseconds after Jan
            1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilteredLogEvent.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream this event belongs to.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilteredLogEvent.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The data contained in the log event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilteredLogEvent.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time the event occurred, expressed as the number of milliseconds after Jan 1,
            1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest">
            <summary>
            Container for the parameters to the FilterLogEvents operation.
            Lists log events from the specified log group. You can list all the log events or
            filter the results using a filter pattern, a time range, and the name of the log stream.
            
             
            <para>
            By default, this operation returns as many log events as can fit in 1 MB (up to 10,000
            log events), or all the events found within the time range that you specify. If the
            results include a token, then there are more log events available, and you can get
            additional results by specifying the token in a subsequent call.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The end of the time range, expressed as the number of milliseconds after Jan 1, 1970
            00:00:00 UTC. Events with a time stamp later than this time are not returned.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern. 
            <para>
            The filter pattern to use. If not provided, all the events are matched.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.Interleaved">
            <summary>
            Gets and sets the property Interleaved. 
            <para>
            If the value is true, the operation makes a best effort to provide responses that
            contain events from multiple log streams within the log group, interleaved in a single
            response. If the value is false, all the matched log events in the first log stream
            are searched first, then those in the next log stream, and so on. The default is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of events to return. The default is 10,000 events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.LogStreamNames">
            <summary>
            Gets and sets the property LogStreamNames. 
            <para>
            Optional list of log stream names.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of events to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The start of the time range, expressed as the number of milliseconds after Jan 1,
            1970 00:00:00 UTC. Events with a time stamp before this time are not returned.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.FilterLogEventsResponse">
            <summary>
            This is the response object from the FilterLogEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsResponse.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            The matched events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsResponse.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token to use when requesting the next set of items. The token expires after 24
            hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.FilterLogEventsResponse.SearchedLogStreams">
            <summary>
            Gets and sets the property SearchedLogStreams. 
            <para>
            Indicates which log streams have been searched and whether each has been searched
            completely.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetLogEventsRequest">
            <summary>
            Container for the parameters to the GetLogEvents operation.
            Lists log events from the specified log stream. You can list all the log events or
            filter using a time range.
            
             
            <para>
            By default, this operation returns as many log events as can fit in a response size
            of 1MB (up to 10,000 log events). You can get additional log events by specifying
            one of the tokens in a subsequent call.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.#ctor(System.String,System.String)">
            <summary>
            Instantiates GetLogEventsRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="logStreamName">The name of the log stream.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.EndTime">
            <summary>
            Gets and sets the property EndTime. 
            <para>
            The end of the time range, expressed as the number of milliseconds after Jan 1, 1970
            00:00:00 UTC. Events with a time stamp later than this time are not included.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.Limit">
            <summary>
            Gets and sets the property Limit. 
            <para>
            The maximum number of log events returned. If you don't specify a value, the maximum
            is as many log events as can fit in a response size of 1 MB, up to 10,000 log events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.NextToken">
            <summary>
            Gets and sets the property NextToken. 
            <para>
            The token for the next set of items to return. (You received this token from a previous
            call.)
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.StartFromHead">
            <summary>
            Gets and sets the property StartFromHead. 
            <para>
            If the value is true, the earliest log events are returned first. If the value is
            false, the latest log events are returned first. The default value is false.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsRequest.StartTime">
            <summary>
            Gets and sets the property StartTime. 
            <para>
            The start of the time range, expressed as the number of milliseconds after Jan 1,
            1970 00:00:00 UTC. Events with a time stamp earlier than this time are not included.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.GetLogEventsResponse">
            <summary>
            This is the response object from the GetLogEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsResponse.Events">
            <summary>
            Gets and sets the property Events. 
            <para>
            The events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsResponse.NextBackwardToken">
            <summary>
            Gets and sets the property NextBackwardToken. 
            <para>
            The token for the next set of items in the backward direction. The token expires after
            24 hours.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.GetLogEventsResponse.NextForwardToken">
            <summary>
            Gets and sets the property NextForwardToken. 
            <para>
            The token for the next set of items in the forward direction. The token expires after
            24 hours.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.InputLogEvent">
            <summary>
            Represents a log event, which is a record of activity that was recorded by the application
            or resource being monitored.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.InputLogEvent.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The raw event message.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.InputLogEvent.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time the event occurred, expressed as the number of milliseconds fter Jan 1, 1970
            00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyRequestMarshaller">
            <summary>
            AssociateKmsKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for AssociateKmsKey operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.AssociateKmsKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller">
            <summary>
            CancelExportTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.CancelExportTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CancelExportTask operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CancelExportTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskRequestMarshaller">
            <summary>
            CreateExportTask Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.CreateExportTaskRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateExportTask operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateExportTaskResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupRequestMarshaller">
            <summary>
            CreateLogGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.CreateLogGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLogGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamRequestMarshaller">
            <summary>
            CreateLogStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.CreateLogStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for CreateLogStream operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.CreateLogStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationRequestMarshaller">
            <summary>
            DeleteDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupRequestMarshaller">
            <summary>
            DeleteLogGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLogGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamRequestMarshaller">
            <summary>
            DeleteLogStream Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteLogStream operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteLogStreamResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterRequestMarshaller">
            <summary>
            DeleteMetricFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteMetricFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteMetricFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller">
            <summary>
            DeleteResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyRequestMarshaller">
            <summary>
            DeleteRetentionPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteRetentionPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteRetentionPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterRequestMarshaller">
            <summary>
            DeleteSubscriptionFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DeleteSubscriptionFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DeleteSubscriptionFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsRequestMarshaller">
            <summary>
            DescribeDestinations Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeDestinations operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeDestinationsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller">
            <summary>
            DescribeExportTasks Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeExportTasks operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeExportTasksResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsRequestMarshaller">
            <summary>
            DescribeLogGroups Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLogGroups operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogGroupsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsRequestMarshaller">
            <summary>
            DescribeLogStreams Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeLogStreams operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeLogStreamsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersRequestMarshaller">
            <summary>
            DescribeMetricFilters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeMetricFilters operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeMetricFiltersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesRequestMarshaller">
            <summary>
            DescribeResourcePolicies Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeResourcePolicies operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeResourcePoliciesResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersRequestMarshaller">
            <summary>
            DescribeSubscriptionFilters Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DescribeSubscriptionFilters operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DescribeSubscriptionFiltersResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DestinationUnmarshaller">
            <summary>
            Response Unmarshaller for Destination Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DestinationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#Destination,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DestinationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DestinationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyRequestMarshaller">
            <summary>
            DisassociateKmsKey Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for DisassociateKmsKey operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.DisassociateKmsKeyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskExecutionInfoUnmarshaller">
            <summary>
            Response Unmarshaller for ExportTaskExecutionInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskExecutionInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#ExportTaskExecutionInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskExecutionInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskExecutionInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskStatusUnmarshaller">
            <summary>
            Response Unmarshaller for ExportTaskStatus Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskStatusUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#ExportTaskStatus,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskStatusUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskStatusUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller">
            <summary>
            Response Unmarshaller for ExportTask Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#ExportTask,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ExportTaskUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilteredLogEventUnmarshaller">
            <summary>
            Response Unmarshaller for FilteredLogEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilteredLogEventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#FilteredLogEvent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilteredLogEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilteredLogEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsRequestMarshaller">
            <summary>
            FilterLogEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.FilterLogEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for FilterLogEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.FilterLogEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsRequestMarshaller">
            <summary>
            GetLogEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.GetLogEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for GetLogEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.GetLogEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InputLogEventMarshaller">
            <summary>
            InputLogEvent Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InputLogEventMarshaller.Marshall(Amazon.CloudWatchLogs.Model.InputLogEvent,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.InputLogEventMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupRequestMarshaller">
            <summary>
            ListTagsLogGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for ListTagsLogGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ListTagsLogGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupUnmarshaller">
            <summary>
            Response Unmarshaller for LogGroup Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#LogGroup,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogGroupUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogStreamUnmarshaller">
            <summary>
            Response Unmarshaller for LogStream Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogStreamUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#LogStream,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogStreamUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.LogStreamUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterMatchRecordUnmarshaller">
            <summary>
            Response Unmarshaller for MetricFilterMatchRecord Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterMatchRecordUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#MetricFilterMatchRecord,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterMatchRecordUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterMatchRecordUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterUnmarshaller">
            <summary>
            Response Unmarshaller for MetricFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#MetricFilter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationMarshaller">
            <summary>
            MetricTransformation Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationMarshaller.Marshall(Amazon.CloudWatchLogs.Model.MetricTransformation,Amazon.Runtime.Internal.Transform.JsonMarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="requestObject"></param>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="F:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationMarshaller.Instance">
            <summary>
            Singleton Marshaller.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationUnmarshaller">
            <summary>
            Response Unmarshaller for MetricTransformation Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#MetricTransformation,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.MetricTransformationUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OutputLogEventUnmarshaller">
            <summary>
            Response Unmarshaller for OutputLogEvent Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OutputLogEventUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#OutputLogEvent,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OutputLogEventUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.OutputLogEventUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyRequestMarshaller">
            <summary>
            PutDestinationPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutDestinationPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationRequestMarshaller">
            <summary>
            PutDestination Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutDestinationRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutDestination operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutDestinationResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsRequestMarshaller">
            <summary>
            PutLogEvents Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutLogEventsRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutLogEvents operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutLogEventsResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterRequestMarshaller">
            <summary>
            PutMetricFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutMetricFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutMetricFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutMetricFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller">
            <summary>
            PutResourcePolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutResourcePolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutResourcePolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyRequestMarshaller">
            <summary>
            PutRetentionPolicy Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutRetentionPolicy operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutRetentionPolicyResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterRequestMarshaller">
            <summary>
            PutSubscriptionFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for PutSubscriptionFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.PutSubscriptionFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.RejectedLogEventsInfoUnmarshaller">
            <summary>
            Response Unmarshaller for RejectedLogEventsInfo Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.RejectedLogEventsInfoUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#RejectedLogEventsInfo,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.RejectedLogEventsInfoUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.RejectedLogEventsInfoUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourcePolicyUnmarshaller">
            <summary>
            Response Unmarshaller for ResourcePolicy Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourcePolicyUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#ResourcePolicy,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourcePolicyUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.ResourcePolicyUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SearchedLogStreamUnmarshaller">
            <summary>
            Response Unmarshaller for SearchedLogStream Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SearchedLogStreamUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#SearchedLogStream,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SearchedLogStreamUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SearchedLogStreamUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SubscriptionFilterUnmarshaller">
            <summary>
            Response Unmarshaller for SubscriptionFilter Object
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SubscriptionFilterUnmarshaller.Amazon#Runtime#Internal#Transform#IUnmarshaller{Amazon#CloudWatchLogs#Model#SubscriptionFilter,Amazon#Runtime#Internal#Transform#XmlUnmarshallerContext}#Unmarshall(Amazon.Runtime.Internal.Transform.XmlUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SubscriptionFilterUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.SubscriptionFilterUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupRequestMarshaller">
            <summary>
            TagLogGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.TagLogGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TagLogGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TagLogGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterRequestMarshaller">
            <summary>
            TestMetricFilter Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.TestMetricFilterRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterResponseUnmarshaller">
            <summary>
            Response Unmarshaller for TestMetricFilter operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.TestMetricFilterResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupRequestMarshaller">
            <summary>
            UntagLogGroup Request Marshaller
            </summary>       
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupRequestMarshaller.Marshall(Amazon.Runtime.AmazonWebServiceRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupRequestMarshaller.Marshall(Amazon.CloudWatchLogs.Model.UntagLogGroupRequest)">
            <summary>
            Marshaller the request object to the HTTP request.
            </summary>  
            <param name="publicRequest"></param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupResponseUnmarshaller">
            <summary>
            Response Unmarshaller for UntagLogGroup operation
            </summary>  
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupResponseUnmarshaller.Unmarshall(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext)">
            <summary>
            Unmarshaller the response from the service to the response class.
            </summary>  
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupResponseUnmarshaller.UnmarshallException(Amazon.Runtime.Internal.Transform.JsonUnmarshallerContext,System.Exception,System.Net.HttpStatusCode)">
            <summary>
            Unmarshaller error response to exception.
            </summary>  
            <param name="context"></param>
            <param name="innerException"></param>
            <param name="statusCode"></param>
            <returns></returns>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.Internal.MarshallTransformations.UntagLogGroupResponseUnmarshaller.Instance">
            <summary>
            Gets the singleton.
            </summary>  
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.InvalidOperationException">
            <summary>
             CloudWatchLogs exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidOperationException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidOperationException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidOperationException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidOperationException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidOperationException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidOperationException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidOperationException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidOperationException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidOperationException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidOperationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidOperationException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            <summary>
             CloudWatchLogs exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidParameterException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidParameterException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidParameterException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidParameterException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidParameterException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidParameterException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidParameterException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidParameterException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidParameterException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException">
            <summary>
             CloudWatchLogs exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.#ctor(System.String)">
            <summary>
            Constructs a new InvalidSequenceTokenException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of InvalidSequenceTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.#ctor(System.Exception)">
            <summary>
            Construct instance of InvalidSequenceTokenException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSequenceTokenException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of InvalidSequenceTokenException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the InvalidSequenceTokenException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            <summary>
             CloudWatchLogs exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.LimitExceededException.#ctor(System.String)">
            <summary>
            Constructs a new LimitExceededException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.LimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.LimitExceededException.#ctor(System.Exception)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.LimitExceededException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.LimitExceededException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of LimitExceededException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.LimitExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the LimitExceededException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest">
            <summary>
            Container for the parameters to the ListTagsLogGroup operation.
            Lists the tags for the specified log group.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ListTagsLogGroupResponse">
            <summary>
            This is the response object from the ListTagsLogGroup operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ListTagsLogGroupResponse.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tags for the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.LogGroup">
            <summary>
            Represents a log group.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the log group, expressed as the number of milliseconds after
            Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.KmsKeyId">
            <summary>
            Gets and sets the property KmsKeyId. 
            <para>
            The Amazon Resource Name (ARN) of the CMK to use when encrypting log data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.MetricFilterCount">
            <summary>
            Gets and sets the property MetricFilterCount. 
            <para>
            The number of metric filters.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.RetentionInDays">
            <summary>
            Gets and sets the property RetentionInDays.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogGroup.StoredBytes">
            <summary>
            Gets and sets the property StoredBytes. 
            <para>
            The number of bytes stored.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.LogStream">
            <summary>
            Represents a log stream, which is a sequence of log events from a single emitter of
            logs.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.Arn">
            <summary>
            Gets and sets the property Arn. 
            <para>
            The Amazon Resource Name (ARN) of the log stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the stream, expressed as the number of milliseconds after Jan
            1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.FirstEventTimestamp">
            <summary>
            Gets and sets the property FirstEventTimestamp. 
            <para>
            The time of the first event, expressed as the number of milliseconds after Jan 1,
            1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.LastEventTimestamp">
            <summary>
            Gets and sets the property LastEventTimestamp. 
            <para>
             the time of the most recent log event in the log stream in CloudWatch Logs. This
            number is expressed as the number of milliseconds after Jan 1, 1970 00:00:00 UTC.
            lastEventTime updates on an eventual consistency basis. It typically updates in less
            than an hour from ingestion, but may take longer in some rare situations.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.LastIngestionTime">
            <summary>
            Gets and sets the property LastIngestionTime. 
            <para>
            The ingestion time, expressed as the number of milliseconds after Jan 1, 1970 00:00:00
            UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.StoredBytes">
            <summary>
            Gets and sets the property StoredBytes. 
            <para>
            The number of bytes stored.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.LogStream.UploadSequenceToken">
            <summary>
            Gets and sets the property UploadSequenceToken. 
            <para>
            The sequence token.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.MetricFilter">
            <summary>
            Metric filters express how CloudWatch Logs would extract metric observations from
            ingested log events and transform them into metric data in a CloudWatch metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilter.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the metric filter, expressed as the number of milliseconds after
            Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilter.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            The name of the metric filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilter.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilter.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilter.MetricTransformations">
            <summary>
            Gets and sets the property MetricTransformations. 
            <para>
            The metric transformations.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.MetricFilterMatchRecord">
            <summary>
            Represents a matched event.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilterMatchRecord.EventMessage">
            <summary>
            Gets and sets the property EventMessage. 
            <para>
            The raw event data.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilterMatchRecord.EventNumber">
            <summary>
            Gets and sets the property EventNumber. 
            <para>
            The event number.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricFilterMatchRecord.ExtractedValues">
            <summary>
            Gets and sets the property ExtractedValues. 
            <para>
            The values extracted from the event data by the filter.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.MetricTransformation">
            <summary>
            Indicates how to transform ingested log events in to metric data in a CloudWatch metric.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricTransformation.DefaultValue">
            <summary>
            Gets and sets the property DefaultValue. 
            <para>
            (Optional) The value to emit when a filter pattern does not match a log event. This
            value can be null.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricTransformation.MetricName">
            <summary>
            Gets and sets the property MetricName. 
            <para>
            The name of the CloudWatch metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricTransformation.MetricNamespace">
            <summary>
            Gets and sets the property MetricNamespace. 
            <para>
            The namespace of the CloudWatch metric.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.MetricTransformation.MetricValue">
            <summary>
            Gets and sets the property MetricValue. 
            <para>
            The value to publish to the CloudWatch metric when a filter pattern matches a log
            event.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            <summary>
             CloudWatchLogs exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.OperationAbortedException.#ctor(System.String)">
            <summary>
            Constructs a new OperationAbortedException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.OperationAbortedException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of OperationAbortedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.OperationAbortedException.#ctor(System.Exception)">
            <summary>
            Construct instance of OperationAbortedException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.OperationAbortedException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationAbortedException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.OperationAbortedException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of OperationAbortedException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.OperationAbortedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the OperationAbortedException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.OutputLogEvent">
            <summary>
            Represents a log event.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.OutputLogEvent.IngestionTime">
            <summary>
            Gets and sets the property IngestionTime. 
            <para>
            The time the event was ingested, expressed as the number of milliseconds after Jan
            1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.OutputLogEvent.Message">
            <summary>
            Gets and sets the property Message. 
            <para>
            The data contained in the log event.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.OutputLogEvent.Timestamp">
            <summary>
            Gets and sets the property Timestamp. 
            <para>
            The time the event occurred, expressed as the number of milliseconds after Jan 1,
            1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest">
            <summary>
            Container for the parameters to the PutDestinationPolicy operation.
            Creates or updates an access policy associated with an existing destination. An access
            policy is an <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html">IAM
            policy document</a> that is used to authorize claims to register a subscription filter
            against a given destination.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest.AccessPolicy">
            <summary>
            Gets and sets the property AccessPolicy. 
            <para>
            An IAM policy document that authorizes cross-account users to deliver their log events
            to the associated destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest.DestinationName">
            <summary>
            Gets and sets the property DestinationName. 
            <para>
            A name for an existing destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDestinationPolicyResponse">
            <summary>
            This is the response object from the PutDestinationPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDestinationRequest">
            <summary>
            Container for the parameters to the PutDestination operation.
            Creates or updates a destination. A destination encapsulates a physical resource (such
            as an Amazon Kinesis stream) and enables you to subscribe to a real-time stream of
            log events for a different account, ingested using <a>PutLogEvents</a>. Currently,
            the only supported physical resource is a Kinesis stream belonging to the same account
            as the destination.
            
             
            <para>
            Through an access policy, a destination controls what is written to its Kinesis stream.
            By default, <code>PutDestination</code> does not set any access policy with the destination,
            which means a cross-account user cannot call <a>PutSubscriptionFilter</a> against
            this destination. To enable this, the destination owner must call <a>PutDestinationPolicy</a>
            after <code>PutDestination</code>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationRequest.DestinationName">
            <summary>
            Gets and sets the property DestinationName. 
            <para>
            A name for the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of an IAM role that grants CloudWatch Logs permissions to call the Amazon
            Kinesis PutRecord operation on the destination stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationRequest.TargetArn">
            <summary>
            Gets and sets the property TargetArn. 
            <para>
            The ARN of an Amazon Kinesis stream to which to deliver matching log events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutDestinationResponse">
            <summary>
            This is the response object from the PutDestination operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutDestinationResponse.Destination">
            <summary>
            Gets and sets the property Destination. 
            <para>
            The destination.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutLogEventsRequest">
            <summary>
            Container for the parameters to the PutLogEvents operation.
            Uploads a batch of log events to the specified log stream.
            
             
            <para>
            You must include the sequence token obtained from the response of the previous call.
            An upload in a newly created log stream does not require a sequence token. You can
            also get the sequence token using <a>DescribeLogStreams</a>. If you call <code>PutLogEvents</code>
            twice within a narrow time period using the same value for <code>sequenceToken</code>,
            both calls may be successful, or one may be rejected.
            </para>
             
            <para>
            The batch of events must satisfy the following constraints:
            </para>
             <ul> <li> 
            <para>
            The maximum batch size is 1,048,576 bytes, and this size is calculated as the sum
            of all event messages in UTF-8, plus 26 bytes for each log event.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be more than 2 hours in the future.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be older than 14 days or the retention period
            of the log group.
            </para>
             </li> <li> 
            <para>
            The log events in the batch must be in chronological ordered by their time stamp (the
            time the event occurred, expressed as the number of milliseconds after Jan 1, 1970
            00:00:00 UTC).
            </para>
             </li> <li> 
            <para>
            The maximum number of log events in a batch is 10,000.
            </para>
             </li> <li> 
            <para>
            A batch of log events in a single request cannot span more than 24 hours. Otherwise,
            the operation fails.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.#ctor(System.String,System.String,System.Collections.Generic.List{Amazon.CloudWatchLogs.Model.InputLogEvent})">
            <summary>
            Instantiates PutLogEventsRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="logStreamName">The name of the log stream.</param>
            <param name="logEvents">The log events.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.LogEvents">
            <summary>
            Gets and sets the property LogEvents. 
            <para>
            The log events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsRequest.SequenceToken">
            <summary>
            Gets and sets the property SequenceToken. 
            <para>
            The sequence token obtained from the response of the previous <code>PutLogEvents</code>
            call. An upload in a newly created log stream does not require a sequence token. You
            can also get the sequence token using <a>DescribeLogStreams</a>. If you call <code>PutLogEvents</code>
            twice within a narrow time period using the same value for <code>sequenceToken</code>,
            both calls may be successful, or one may be rejected.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutLogEventsResponse">
            <summary>
            This is the response object from the PutLogEvents operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsResponse.NextSequenceToken">
            <summary>
            Gets and sets the property NextSequenceToken. 
            <para>
            The next sequence token.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutLogEventsResponse.RejectedLogEventsInfo">
            <summary>
            Gets and sets the property RejectedLogEventsInfo. 
            <para>
            The rejected events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest">
            <summary>
            Container for the parameters to the PutMetricFilter operation.
            Creates or updates a metric filter and associates it with the specified log group.
            Metric filters allow you to configure rules to extract metric data from log events
            ingested through <a>PutLogEvents</a>.
            
             
            <para>
            The maximum number of metric filters that can be associated with a log group is 100.
            </para>
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.#ctor(System.String,System.String,System.String,System.Collections.Generic.List{Amazon.CloudWatchLogs.Model.MetricTransformation})">
            <summary>
            Instantiates PutMetricFilterRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="filterName">A name for the metric filter.</param>
            <param name="filterPattern">A filter pattern for extracting metric data out of ingested log events.</param>
            <param name="metricTransformations">A collection of information that defines how metric data gets emitted.</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            A name for the metric filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern. 
            <para>
            A filter pattern for extracting metric data out of ingested log events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutMetricFilterRequest.MetricTransformations">
            <summary>
            Gets and sets the property MetricTransformations. 
            <para>
            A collection of information that defines how metric data gets emitted.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutMetricFilterResponse">
            <summary>
            This is the response object from the PutMetricFilter operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest">
            <summary>
            Container for the parameters to the PutResourcePolicy operation.
            Creates or updates a resource policy allowing other AWS services to put log events
            to this account, such as Amazon Route 53. An account can have up to 50 resource policies
            per region.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            Details of the new policy, including the identity of the principal that is enabled
            to put logs to this account. This is formatted as a JSON string.
            </para>
             
            <para>
            The following example creates a resource policy enabling the Route 53 service to put
            DNS query logs in to the specified log group. Replace "logArn" with the ARN of your
            CloudWatch Logs resource, such as a log group or log stream.
            </para>
             
            <para>
             { "Version": "2012-10-17" "Statement": [ { "Sid": "Route53LogsToCloudWatchLogs",
            "Effect": "Allow", "Principal": { "Service": [ "route53.amazonaws.com" ] }, "Action":"logs:PutLogEvents",
            "Resource": logArn } ] } 
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            Name of the new policy. This parameter is required.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutResourcePolicyResponse">
            <summary>
            This is the response object from the PutResourcePolicy operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutResourcePolicyResponse.ResourcePolicy">
            <summary>
            Gets and sets the property ResourcePolicy. 
            <para>
            The new policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest">
            <summary>
            Container for the parameters to the PutRetentionPolicy operation.
            Sets the retention of the specified log group. A retention policy allows you to configure
            the number of days for which to retain log events in the specified log group.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest.#ctor">
            <summary>
            Empty constructor used to set  properties independently even when a simple constructor is available
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest.#ctor(System.String,System.Int32)">
            <summary>
            Instantiates PutRetentionPolicyRequest with the parameterized properties
            </summary>
            <param name="logGroupName">The name of the log group.</param>
            <param name="retentionInDays">Sets the PutRetentionPolicyRequest RetentionInDays property</param>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest.RetentionInDays">
            <summary>
            Gets and sets the property RetentionInDays.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutRetentionPolicyResponse">
            <summary>
            This is the response object from the PutRetentionPolicy operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest">
            <summary>
            Container for the parameters to the PutSubscriptionFilter operation.
            Creates or updates a subscription filter and associates it with the specified log
            group. Subscription filters allow you to subscribe to a real-time stream of log events
            ingested through <a>PutLogEvents</a> and have them delivered to a specific destination.
            Currently, the supported destinations are:
            
             <ul> <li> 
            <para>
            An Amazon Kinesis stream belonging to the same account as the subscription filter,
            for same-account delivery.
            </para>
             </li> <li> 
            <para>
            A logical destination that belongs to a different account, for cross-account delivery.
            </para>
             </li> <li> 
            <para>
            An Amazon Kinesis Firehose delivery stream that belongs to the same account as the
            subscription filter, for same-account delivery.
            </para>
             </li> <li> 
            <para>
            An AWS Lambda function that belongs to the same account as the subscription filter,
            for same-account delivery.
            </para>
             </li> </ul> 
            <para>
            There can only be one subscription filter associated with a log group. If you are
            updating an existing filter, you must specify the correct name in <code>filterName</code>.
            Otherwise, the call fails because you cannot associate a second filter with a log
            group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.DestinationArn">
            <summary>
            Gets and sets the property DestinationArn. 
            <para>
            The ARN of the destination to deliver matching log events to. Currently, the supported
            destinations are:
            </para>
             <ul> <li> 
            <para>
            An Amazon Kinesis stream belonging to the same account as the subscription filter,
            for same-account delivery.
            </para>
             </li> <li> 
            <para>
            A logical destination (specified using an ARN) belonging to a different account, for
            cross-account delivery.
            </para>
             </li> <li> 
            <para>
            An Amazon Kinesis Firehose delivery stream belonging to the same account as the subscription
            filter, for same-account delivery.
            </para>
             </li> <li> 
            <para>
            An AWS Lambda function belonging to the same account as the subscription filter, for
            same-account delivery.
            </para>
             </li> </ul>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.Distribution">
            <summary>
            Gets and sets the property Distribution. 
            <para>
            The method used to distribute log data to the destination. By default log data is
            grouped by log stream, but the grouping can be set to random for a more even distribution.
            This property is only applicable when the destination is an Amazon Kinesis stream.
            
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            A name for the subscription filter. If you are updating an existing filter, you must
            specify the correct name in <code>filterName</code>. Otherwise, the call fails because
            you cannot associate a second filter with a log group. To find the name of the filter
            currently associated with a log group, use <a>DescribeSubscriptionFilters</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern. 
            <para>
            A filter pattern for subscribing to a filtered stream of log events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest.RoleArn">
            <summary>
            Gets and sets the property RoleArn. 
            <para>
            The ARN of an IAM role that grants CloudWatch Logs permissions to deliver ingested
            log events to the destination stream. You don't need to provide the ARN when you are
            working with a logical destination for cross-account delivery.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.PutSubscriptionFilterResponse">
            <summary>
            This is the response object from the PutSubscriptionFilter operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.RejectedLogEventsInfo">
            <summary>
            Represents the rejected events.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.RejectedLogEventsInfo.ExpiredLogEventEndIndex">
            <summary>
            Gets and sets the property ExpiredLogEventEndIndex. 
            <para>
            The expired log events.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.RejectedLogEventsInfo.TooNewLogEventStartIndex">
            <summary>
            Gets and sets the property TooNewLogEventStartIndex. 
            <para>
            The log events that are too new.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.RejectedLogEventsInfo.TooOldLogEventEndIndex">
            <summary>
            Gets and sets the property TooOldLogEventEndIndex. 
            <para>
            The log events that are too old.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            <summary>
             CloudWatchLogs exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceAlreadyExistsException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceAlreadyExistsException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceAlreadyExistsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            <summary>
             CloudWatchLogs exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceNotFoundException.#ctor(System.String)">
            <summary>
            Constructs a new ResourceNotFoundException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceNotFoundException.#ctor(System.Exception)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceNotFoundException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceNotFoundException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ResourceNotFoundException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ResourceNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ResourceNotFoundException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ResourcePolicy">
            <summary>
            A policy enabling one or more entities to put logs to a log group in this account.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ResourcePolicy.LastUpdatedTime">
            <summary>
            Gets and sets the property LastUpdatedTime. 
            <para>
            Time stamp showing when this policy was last updated, expressed as the number of milliseconds
            after Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ResourcePolicy.PolicyDocument">
            <summary>
            Gets and sets the property PolicyDocument. 
            <para>
            The details of the policy.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.ResourcePolicy.PolicyName">
            <summary>
            Gets and sets the property PolicyName. 
            <para>
            The name of the resource policy.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.SearchedLogStream">
            <summary>
            Represents the search status of a log stream.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SearchedLogStream.LogStreamName">
            <summary>
            Gets and sets the property LogStreamName. 
            <para>
            The name of the log stream.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SearchedLogStream.SearchedCompletely">
            <summary>
            Gets and sets the property SearchedCompletely. 
            <para>
            Indicates whether all the events in this log stream were searched.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            <summary>
             CloudWatchLogs exception
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceUnavailableException.#ctor(System.String)">
            <summary>
            Constructs a new ServiceUnavailableException with the specified error
            message.
            </summary>
            <param name="message">
            Describes the error encountered.
            </param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceUnavailableException.#ctor(System.String,System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceUnavailableException.#ctor(System.Exception)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceUnavailableException.#ctor(System.String,System.Exception,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceUnavailableException.#ctor(System.String,Amazon.Runtime.ErrorType,System.String,System.String,System.Net.HttpStatusCode)">
            <summary>
            Construct instance of ServiceUnavailableException
            </summary>
            <param name="message"></param>
            <param name="errorType"></param>
            <param name="errorCode"></param>
            <param name="requestId"></param>
            <param name="statusCode"></param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Model.ServiceUnavailableException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructs a new instance of the ServiceUnavailableException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="info" /> parameter is null. </exception>
            <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is null or <see cref="P:System.Exception.HResult" /> is zero (0). </exception>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.SubscriptionFilter">
            <summary>
            Represents a subscription filter.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.CreationTime">
            <summary>
            Gets and sets the property CreationTime. 
            <para>
            The creation time of the subscription filter, expressed as the number of milliseconds
            after Jan 1, 1970 00:00:00 UTC.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.DestinationArn">
            <summary>
            Gets and sets the property DestinationArn. 
            <para>
            The Amazon Resource Name (ARN) of the destination.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.Distribution">
            <summary>
            Gets and sets the property Distribution.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.FilterName">
            <summary>
            Gets and sets the property FilterName. 
            <para>
            The name of the subscription filter.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.SubscriptionFilter.RoleArn">
            <summary>
            Gets and sets the property RoleArn.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.TagLogGroupRequest">
            <summary>
            Container for the parameters to the TagLogGroup operation.
            Adds or updates the specified tags for the specified log group.
            
             
            <para>
            To list the tags for a log group, use <a>ListTagsLogGroup</a>. To remove tags, use
            <a>UntagLogGroup</a>.
            </para>
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/log-group-tagging.html">Tag
            Log Groups in Amazon CloudWatch Logs</a> in the <i>Amazon CloudWatch Logs User Guide</i>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TagLogGroupRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TagLogGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The key-value pairs to use for the tags.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.TagLogGroupResponse">
            <summary>
            This is the response object from the TagLogGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.TestMetricFilterRequest">
            <summary>
            Container for the parameters to the TestMetricFilter operation.
            Tests the filter pattern of a metric filter against a sample of log event messages.
            You can use this operation to validate the correctness of a metric filter pattern.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TestMetricFilterRequest.FilterPattern">
            <summary>
            Gets and sets the property FilterPattern.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TestMetricFilterRequest.LogEventMessages">
            <summary>
            Gets and sets the property LogEventMessages. 
            <para>
            The log event messages to test.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.TestMetricFilterResponse">
            <summary>
            This is the response object from the TestMetricFilter operation.
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.TestMetricFilterResponse.Matches">
            <summary>
            Gets and sets the property Matches. 
            <para>
            The matched events.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.UntagLogGroupRequest">
            <summary>
            Container for the parameters to the UntagLogGroup operation.
            Removes the specified tags from the specified log group.
            
             
            <para>
            To list the tags for a log group, use <a>ListTagsLogGroup</a>. To add tags, use <a>UntagLogGroup</a>.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UntagLogGroupRequest.LogGroupName">
            <summary>
            Gets and sets the property LogGroupName. 
            <para>
            The name of the log group.
            </para>
            </summary>
        </member>
        <member name="P:Amazon.CloudWatchLogs.Model.UntagLogGroupRequest.Tags">
            <summary>
            Gets and sets the property Tags. 
            <para>
            The tag keys. The corresponding tags are removed from the log group.
            </para>
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Model.UntagLogGroupResponse">
            <summary>
            This is the response object from the UntagLogGroup operation.
            </summary>
        </member>
        <member name="T:Amazon.CloudWatchLogs.Distribution">
            <summary>
            Constants used for properties of type Distribution.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.Distribution.ByLogStream">
            <summary>
            Constant ByLogStream for Distribution
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.Distribution.Random">
            <summary>
            Constant Random for Distribution
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Distribution.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Distribution.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.Distribution.op_Implicit(System.String)~Amazon.CloudWatchLogs.Distribution">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.ExportTaskStatusCode">
            <summary>
            Constants used for properties of type ExportTaskStatusCode.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.CANCELLED">
            <summary>
            Constant CANCELLED for ExportTaskStatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.COMPLETED">
            <summary>
            Constant COMPLETED for ExportTaskStatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.FAILED">
            <summary>
            Constant FAILED for ExportTaskStatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.PENDING">
            <summary>
            Constant PENDING for ExportTaskStatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.PENDING_CANCEL">
            <summary>
            Constant PENDING_CANCEL for ExportTaskStatusCode
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.ExportTaskStatusCode.RUNNING">
            <summary>
            Constant RUNNING for ExportTaskStatusCode
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.ExportTaskStatusCode.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.ExportTaskStatusCode.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.ExportTaskStatusCode.op_Implicit(System.String)~Amazon.CloudWatchLogs.ExportTaskStatusCode">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.OrderBy">
            <summary>
            Constants used for properties of type OrderBy.
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.OrderBy.LastEventTime">
            <summary>
            Constant LastEventTime for OrderBy
            </summary>
        </member>
        <member name="F:Amazon.CloudWatchLogs.OrderBy.LogStreamName">
            <summary>
            Constant LogStreamName for OrderBy
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.OrderBy.#ctor(System.String)">
            <summary>
            This constant constructor does not need to be called if the constant
            you are attempting to use is already defined as a static instance of 
            this class.
            This constructor should be used to construct constants that are not
            defined as statics, for instance if attempting to use a feature that is
            newer than the current version of the SDK.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.OrderBy.FindValue(System.String)">
            <summary>
            Finds the constant for the unique value.
            </summary>
            <param name="value">The unique value for the constant</param>
            <returns>The constant for the unique value</returns>
        </member>
        <member name="M:Amazon.CloudWatchLogs.OrderBy.op_Implicit(System.String)~Amazon.CloudWatchLogs.OrderBy">
            <summary>
            Utility method to convert strings to the constant class.
            </summary>
            <param name="value">The string value to convert to the constant class.</param>
            <returns></returns>
        </member>
        <member name="T:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient">
             <summary>
             Implementation for accessing CloudWatchLogs
            
             You can use Amazon CloudWatch Logs to monitor, store, and access your log files from
             Amazon EC2 instances, AWS CloudTrail, or other sources. You can then retrieve the
             associated log data from CloudWatch Logs using the CloudWatch console, CloudWatch
             Logs commands in the AWS CLI, CloudWatch Logs API, or CloudWatch Logs SDK.
             
              
             <para>
             You can use CloudWatch Logs to:
             </para>
              <ul> <li> 
             <para>
              <b>Monitor logs from EC2 instances in real-time</b>: You can use CloudWatch Logs
             to monitor applications and systems using log data. For example, CloudWatch Logs can
             track the number of errors that occur in your application logs and send you a notification
             whenever the rate of errors exceeds a threshold that you specify. CloudWatch Logs
             uses your log data for monitoring; so, no code changes are required. For example,
             you can monitor application logs for specific literal terms (such as "NullReferenceException")
             or count the number of occurrences of a literal term at a particular position in log
             data (such as "404" status codes in an Apache access log). When the term you are searching
             for is found, CloudWatch Logs reports the data to a CloudWatch metric that you specify.
             </para>
              </li> <li> 
             <para>
              <b>Monitor AWS CloudTrail logged events</b>: You can create alarms in CloudWatch
             and receive notifications of particular API activity as captured by CloudTrail and
             use the notification to perform troubleshooting.
             </para>
              </li> <li> 
             <para>
              <b>Archive log data</b>: You can use CloudWatch Logs to store your log data in highly
             durable storage. You can change the log retention setting so that any log events older
             than this setting are automatically deleted. The CloudWatch Logs agent makes it easy
             to quickly send both rotated and non-rotated log data off of a host and into the log
             service. You can then access the raw log data when you need it.
             </para>
              </li> </ul>
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor">
             <summary>
             Constructs AmazonCloudWatchLogsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(Amazon.RegionEndpoint)">
             <summary>
             Constructs AmazonCloudWatchLogsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig)">
             <summary>
             Constructs AmazonCloudWatchLogsClient with the credentials loaded from the application's
             default configuration, and if unsuccessful from the Instance Profile service on an EC2 instance.
             
             Example App.config with credentials set. 
             <code>
             &lt;?xml version="1.0" encoding="utf-8" ?&gt;
             &lt;configuration&gt;
                 &lt;appSettings&gt;
                     &lt;add key="AWSProfileName" value="AWS Default"/&gt;
                 &lt;/appSettings&gt;
             &lt;/configuration&gt;
             </code>
            
             </summary>
             <param name="config">The AmazonCloudWatchLogsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(Amazon.Runtime.AWSCredentials)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Credentials
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(Amazon.Runtime.AWSCredentials,Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Credentials and an
            AmazonCloudWatchLogsClient Configuration object.
            </summary>
            <param name="credentials">AWS Credentials</param>
            <param name="clientConfig">The AmazonCloudWatchLogsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String,Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchLogsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="clientConfig">The AmazonCloudWatchLogsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String,System.String,Amazon.RegionEndpoint)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID and AWS Secret Key
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="region">The region to connect.</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.#ctor(System.String,System.String,System.String,Amazon.CloudWatchLogs.AmazonCloudWatchLogsConfig)">
            <summary>
            Constructs AmazonCloudWatchLogsClient with AWS Access Key ID, AWS Secret Key and an
            AmazonCloudWatchLogsClient Configuration object. 
            </summary>
            <param name="awsAccessKeyId">AWS Access Key ID</param>
            <param name="awsSecretAccessKey">AWS Secret Access Key</param>
            <param name="awsSessionToken">AWS Session Token</param>
            <param name="clientConfig">The AmazonCloudWatchLogsClient Configuration Object</param>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateSigner">
            <summary>
            Creates the signer for the service.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.Dispose(System.Boolean)">
            <summary>
            Disposes the service client.
            </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.AssociateKmsKey(Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest)">
            <summary>
            Associates the specified AWS Key Management Service (AWS KMS) customer master key
            (CMK) with the specified log group.
            
             
            <para>
            Associating an AWS KMS CMK with a log group overrides any existing associations between
            the log group and a CMK. After a CMK is associated with a log group, all newly ingested
            data for the log group is encrypted using the CMK. This association is stored as long
            as the data encrypted with the CMK is still within Amazon CloudWatch Logs. This enables
            Amazon CloudWatch Logs to decrypt this data whenever it is requested.
            </para>
             
            <para>
            Note that it can take up to 5 minutes for this operation to take effect.
            </para>
             
            <para>
            If you attempt to associate a CMK with a log group but the CMK does not exist or the
            CMK is disabled, you will receive an <code>InvalidParameterException</code> error.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateKmsKey service method.</param>
            
            <returns>The response from the AssociateKmsKey service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/AssociateKmsKey">REST API Reference for AssociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.AssociateKmsKeyAsync(Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateKmsKey operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateKmsKey operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/AssociateKmsKey">REST API Reference for AssociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CancelExportTask(Amazon.CloudWatchLogs.Model.CancelExportTaskRequest)">
            <summary>
            Cancels the specified export task.
            
             
            <para>
            The task must be in the <code>PENDING</code> or <code>RUNNING</code> state.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelExportTask service method.</param>
            
            <returns>The response from the CancelExportTask service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidOperationException">
            The operation is not valid on the specified resource.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CancelExportTask">REST API Reference for CancelExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CancelExportTaskAsync(Amazon.CloudWatchLogs.Model.CancelExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelExportTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CancelExportTask">REST API Reference for CancelExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateExportTask(Amazon.CloudWatchLogs.Model.CreateExportTaskRequest)">
            <summary>
            Creates an export task, which allows you to efficiently export data from a log group
            to an Amazon S3 bucket.
            
             
            <para>
            This is an asynchronous call. If all the required information is provided, this operation
            initiates an export task and responds with the ID of the task. After the task has
            started, you can use <a>DescribeExportTasks</a> to get the status of the export task.
            Each account can only have one active (<code>RUNNING</code> or <code>PENDING</code>)
            export task at a time. To cancel an export task, use <a>CancelExportTask</a>.
            </para>
             
            <para>
            You can export logs from multiple log groups or multiple time ranges to the same S3
            bucket. To separate out log data for each export task, you can specify a prefix to
            be used as the Amazon S3 key prefix for all exported objects.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateExportTask service method.</param>
            
            <returns>The response from the CreateExportTask service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateExportTask">REST API Reference for CreateExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateExportTaskAsync(Amazon.CloudWatchLogs.Model.CreateExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateExportTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateExportTask">REST API Reference for CreateExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateLogGroup(Amazon.CloudWatchLogs.Model.CreateLogGroupRequest)">
            <summary>
            Creates a log group with the specified name.
            
             
            <para>
            You can create up to 5000 log groups per account.
            </para>
             
            <para>
            You must use the following guidelines when naming a log group:
            </para>
             <ul> <li> 
            <para>
            Log group names must be unique within a region for an AWS account.
            </para>
             </li> <li> 
            <para>
            Log group names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            Log group names consist of the following characters: a-z, A-Z, 0-9, '_' (underscore),
            '-' (hyphen), '/' (forward slash), and '.' (period).
            </para>
             </li> </ul> 
            <para>
            If you associate a AWS Key Management Service (AWS KMS) customer master key (CMK)
            with the log group, ingested data is encrypted using the CMK. This association is
            stored as long as the data encrypted with the CMK is still within Amazon CloudWatch
            Logs. This enables Amazon CloudWatch Logs to decrypt this data whenever it is requested.
            </para>
             
            <para>
            If you attempt to associate a CMK with the log group but the CMK does not exist or
            the CMK is disabled, you will receive an <code>InvalidParameterException</code> error.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLogGroup service method.</param>
            
            <returns>The response from the CreateLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogGroup">REST API Reference for CreateLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateLogGroupAsync(Amazon.CloudWatchLogs.Model.CreateLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLogGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLogGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogGroup">REST API Reference for CreateLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateLogStream(Amazon.CloudWatchLogs.Model.CreateLogStreamRequest)">
            <summary>
            Creates a log stream for the specified log group.
            
             
            <para>
            There is no limit on the number of log streams that you can create for a log group.
            </para>
             
            <para>
            You must use the following guidelines when naming a log stream:
            </para>
             <ul> <li> 
            <para>
            Log stream names must be unique within the log group.
            </para>
             </li> <li> 
            <para>
            Log stream names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            The ':' (colon) and '*' (asterisk) characters are not allowed.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLogStream service method.</param>
            
            <returns>The response from the CreateLogStream service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogStream">REST API Reference for CreateLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.CreateLogStreamAsync(Amazon.CloudWatchLogs.Model.CreateLogStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLogStream operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLogStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogStream">REST API Reference for CreateLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteDestination(Amazon.CloudWatchLogs.Model.DeleteDestinationRequest)">
            <summary>
            Deletes the specified destination, and eventually disables all the subscription filters
            that publish to it. This operation does not delete the physical resource encapsulated
            by the destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDestination service method.</param>
            
            <returns>The response from the DeleteDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDestination">REST API Reference for DeleteDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteDestinationAsync(Amazon.CloudWatchLogs.Model.DeleteDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDestination operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDestination operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDestination">REST API Reference for DeleteDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteLogGroup(Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest)">
            <summary>
            Deletes the specified log group and permanently deletes all the archived log events
            associated with the log group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLogGroup service method.</param>
            
            <returns>The response from the DeleteLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogGroup">REST API Reference for DeleteLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteLogGroupAsync(Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLogGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLogGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogGroup">REST API Reference for DeleteLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteLogStream(Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest)">
            <summary>
            Deletes the specified log stream and permanently deletes all the archived log events
            associated with the log stream.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLogStream service method.</param>
            
            <returns>The response from the DeleteLogStream service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogStream">REST API Reference for DeleteLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteLogStreamAsync(Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLogStream operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLogStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogStream">REST API Reference for DeleteLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteMetricFilter(Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest)">
            <summary>
            Deletes the specified metric filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMetricFilter service method.</param>
            
            <returns>The response from the DeleteMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteMetricFilter">REST API Reference for DeleteMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteMetricFilterAsync(Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteMetricFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMetricFilter operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteMetricFilter">REST API Reference for DeleteMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteResourcePolicy(Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest)">
            <summary>
            Deletes a resource policy from this account. This revokes the access of the identities
            in that policy to put log events to this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteResourcePolicyAsync(Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteResourcePolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteRetentionPolicy(Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest)">
            <summary>
            Deletes the specified retention policy.
            
             
            <para>
            Log events do not expire if they belong to log groups without a retention policy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRetentionPolicy service method.</param>
            
            <returns>The response from the DeleteRetentionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteRetentionPolicy">REST API Reference for DeleteRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteRetentionPolicyAsync(Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRetentionPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRetentionPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteRetentionPolicy">REST API Reference for DeleteRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteSubscriptionFilter(Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest)">
            <summary>
            Deletes the specified subscription filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubscriptionFilter service method.</param>
            
            <returns>The response from the DeleteSubscriptionFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteSubscriptionFilter">REST API Reference for DeleteSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DeleteSubscriptionFilterAsync(Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSubscriptionFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSubscriptionFilter operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteSubscriptionFilter">REST API Reference for DeleteSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeDestinations(Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest)">
            <summary>
            Lists all your destinations. The results are ASCII-sorted by destination name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDestinations service method.</param>
            
            <returns>The response from the DescribeDestinations service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDestinations">REST API Reference for DescribeDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeDestinationsAsync(Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDestinations operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDestinations operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDestinations">REST API Reference for DescribeDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeExportTasks(Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest)">
            <summary>
            Lists the specified export tasks. You can list all your export tasks or filter the
            results based on task ID or task status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks service method.</param>
            
            <returns>The response from the DescribeExportTasks service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeExportTasks">REST API Reference for DescribeExportTasks Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeExportTasksAsync(Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeExportTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeExportTasks">REST API Reference for DescribeExportTasks Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeLogGroups">
            <summary>
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            </summary>
            
            <returns>The response from the DescribeLogGroups service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeLogGroups(Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest)">
            <summary>
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLogGroups service method.</param>
            
            <returns>The response from the DescribeLogGroups service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeLogGroupsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLogGroups service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeLogGroupsAsync(Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLogGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLogGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeLogStreams(Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest)">
            <summary>
            Lists the log streams for the specified log group. You can list all the log streams
            or filter the results by prefix. You can also control how the results are ordered.
            
             
            <para>
            This operation has a limit of five transactions per second, after which transactions
            are throttled.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLogStreams service method.</param>
            
            <returns>The response from the DescribeLogStreams service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogStreams">REST API Reference for DescribeLogStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeLogStreamsAsync(Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLogStreams operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLogStreams operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogStreams">REST API Reference for DescribeLogStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeMetricFilters(Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest)">
            <summary>
            Lists the specified metric filters. You can list all the metric filters or filter
            the results by log name, prefix, metric name, or metric namespace. The results are
            ASCII-sorted by filter name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMetricFilters service method.</param>
            
            <returns>The response from the DescribeMetricFilters service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeMetricFilters">REST API Reference for DescribeMetricFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeMetricFiltersAsync(Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeMetricFilters operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMetricFilters operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeMetricFilters">REST API Reference for DescribeMetricFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeResourcePolicies(Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest)">
            <summary>
            Lists the resource policies in this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResourcePolicies service method.</param>
            
            <returns>The response from the DescribeResourcePolicies service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeResourcePolicies">REST API Reference for DescribeResourcePolicies Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeResourcePoliciesAsync(Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeResourcePolicies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeResourcePolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeResourcePolicies">REST API Reference for DescribeResourcePolicies Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeSubscriptionFilters(Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest)">
            <summary>
            Lists the subscription filters for the specified log group. You can list all the subscription
            filters or filter the results by prefix. The results are ASCII-sorted by filter name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSubscriptionFilters service method.</param>
            
            <returns>The response from the DescribeSubscriptionFilters service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeSubscriptionFilters">REST API Reference for DescribeSubscriptionFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DescribeSubscriptionFiltersAsync(Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSubscriptionFilters operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSubscriptionFilters operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeSubscriptionFilters">REST API Reference for DescribeSubscriptionFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DisassociateKmsKey(Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest)">
            <summary>
            Disassociates the associated AWS Key Management Service (AWS KMS) customer master
            key (CMK) from the specified log group.
            
             
            <para>
            After the AWS KMS CMK is disassociated from the log group, AWS CloudWatch Logs stops
            encrypting newly ingested data for the log group. All previously ingested data remains
            encrypted, and AWS CloudWatch Logs requires permissions for the CMK whenever the encrypted
            data is requested.
            </para>
             
            <para>
            Note that it can take up to 5 minutes for this operation to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateKmsKey service method.</param>
            
            <returns>The response from the DisassociateKmsKey service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DisassociateKmsKey">REST API Reference for DisassociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.DisassociateKmsKeyAsync(Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisassociateKmsKey operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisassociateKmsKey operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DisassociateKmsKey">REST API Reference for DisassociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.FilterLogEvents(Amazon.CloudWatchLogs.Model.FilterLogEventsRequest)">
            <summary>
            Lists log events from the specified log group. You can list all the log events or
            filter the results using a filter pattern, a time range, and the name of the log stream.
            
             
            <para>
            By default, this operation returns as many log events as can fit in 1 MB (up to 10,000
            log events), or all the events found within the time range that you specify. If the
            results include a token, then there are more log events available, and you can get
            additional results by specifying the token in a subsequent call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FilterLogEvents service method.</param>
            
            <returns>The response from the FilterLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/FilterLogEvents">REST API Reference for FilterLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.FilterLogEventsAsync(Amazon.CloudWatchLogs.Model.FilterLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the FilterLogEvents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the FilterLogEvents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/FilterLogEvents">REST API Reference for FilterLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetLogEvents(Amazon.CloudWatchLogs.Model.GetLogEventsRequest)">
            <summary>
            Lists log events from the specified log stream. You can list all the log events or
            filter using a time range.
            
             
            <para>
            By default, this operation returns as many log events as can fit in a response size
            of 1MB (up to 10,000 log events). You can get additional log events by specifying
            one of the tokens in a subsequent call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLogEvents service method.</param>
            
            <returns>The response from the GetLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogEvents">REST API Reference for GetLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.GetLogEventsAsync(Amazon.CloudWatchLogs.Model.GetLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetLogEvents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLogEvents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogEvents">REST API Reference for GetLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.ListTagsLogGroup(Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest)">
            <summary>
            Lists the tags for the specified log group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsLogGroup service method.</param>
            
            <returns>The response from the ListTagsLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListTagsLogGroup">REST API Reference for ListTagsLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.ListTagsLogGroupAsync(Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTagsLogGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTagsLogGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListTagsLogGroup">REST API Reference for ListTagsLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutDestination(Amazon.CloudWatchLogs.Model.PutDestinationRequest)">
            <summary>
            Creates or updates a destination. A destination encapsulates a physical resource (such
            as an Amazon Kinesis stream) and enables you to subscribe to a real-time stream of
            log events for a different account, ingested using <a>PutLogEvents</a>. Currently,
            the only supported physical resource is a Kinesis stream belonging to the same account
            as the destination.
            
             
            <para>
            Through an access policy, a destination controls what is written to its Kinesis stream.
            By default, <code>PutDestination</code> does not set any access policy with the destination,
            which means a cross-account user cannot call <a>PutSubscriptionFilter</a> against
            this destination. To enable this, the destination owner must call <a>PutDestinationPolicy</a>
            after <code>PutDestination</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDestination service method.</param>
            
            <returns>The response from the PutDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestination">REST API Reference for PutDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutDestinationAsync(Amazon.CloudWatchLogs.Model.PutDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutDestination operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutDestination operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestination">REST API Reference for PutDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutDestinationPolicy(Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest)">
            <summary>
            Creates or updates an access policy associated with an existing destination. An access
            policy is an <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html">IAM
            policy document</a> that is used to authorize claims to register a subscription filter
            against a given destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDestinationPolicy service method.</param>
            
            <returns>The response from the PutDestinationPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestinationPolicy">REST API Reference for PutDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutDestinationPolicyAsync(Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutDestinationPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutDestinationPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestinationPolicy">REST API Reference for PutDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutLogEvents(Amazon.CloudWatchLogs.Model.PutLogEventsRequest)">
            <summary>
            Uploads a batch of log events to the specified log stream.
            
             
            <para>
            You must include the sequence token obtained from the response of the previous call.
            An upload in a newly created log stream does not require a sequence token. You can
            also get the sequence token using <a>DescribeLogStreams</a>. If you call <code>PutLogEvents</code>
            twice within a narrow time period using the same value for <code>sequenceToken</code>,
            both calls may be successful, or one may be rejected.
            </para>
             
            <para>
            The batch of events must satisfy the following constraints:
            </para>
             <ul> <li> 
            <para>
            The maximum batch size is 1,048,576 bytes, and this size is calculated as the sum
            of all event messages in UTF-8, plus 26 bytes for each log event.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be more than 2 hours in the future.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be older than 14 days or the retention period
            of the log group.
            </para>
             </li> <li> 
            <para>
            The log events in the batch must be in chronological ordered by their time stamp (the
            time the event occurred, expressed as the number of milliseconds after Jan 1, 1970
            00:00:00 UTC).
            </para>
             </li> <li> 
            <para>
            The maximum number of log events in a batch is 10,000.
            </para>
             </li> <li> 
            <para>
            A batch of log events in a single request cannot span more than 24 hours. Otherwise,
            the operation fails.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLogEvents service method.</param>
            
            <returns>The response from the PutLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException">
            The event was already logged.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException">
            The sequence token is not valid.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutLogEvents">REST API Reference for PutLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutLogEventsAsync(Amazon.CloudWatchLogs.Model.PutLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutLogEvents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutLogEvents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutLogEvents">REST API Reference for PutLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutMetricFilter(Amazon.CloudWatchLogs.Model.PutMetricFilterRequest)">
            <summary>
            Creates or updates a metric filter and associates it with the specified log group.
            Metric filters allow you to configure rules to extract metric data from log events
            ingested through <a>PutLogEvents</a>.
            
             
            <para>
            The maximum number of metric filters that can be associated with a log group is 100.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricFilter service method.</param>
            
            <returns>The response from the PutMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutMetricFilter">REST API Reference for PutMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutMetricFilterAsync(Amazon.CloudWatchLogs.Model.PutMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricFilter operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutMetricFilter">REST API Reference for PutMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutResourcePolicy(Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest)">
            <summary>
            Creates or updates a resource policy allowing other AWS services to put log events
            to this account, such as Amazon Route 53. An account can have up to 50 resource policies
            per region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutResourcePolicyAsync(Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutResourcePolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutRetentionPolicy(Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest)">
            <summary>
            Sets the retention of the specified log group. A retention policy allows you to configure
            the number of days for which to retain log events in the specified log group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRetentionPolicy service method.</param>
            
            <returns>The response from the PutRetentionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutRetentionPolicy">REST API Reference for PutRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutRetentionPolicyAsync(Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRetentionPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRetentionPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutRetentionPolicy">REST API Reference for PutRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutSubscriptionFilter(Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest)">
            <summary>
            Creates or updates a subscription filter and associates it with the specified log
            group. Subscription filters allow you to subscribe to a real-time stream of log events
            ingested through <a>PutLogEvents</a> and have them delivered to a specific destination.
            Currently, the supported destinations are:
            
             <ul> <li> 
            <para>
            An Amazon Kinesis stream belonging to the same account as the subscription filter,
            for same-account delivery.
            </para>
             </li> <li> 
            <para>
            A logical destination that belongs to a different account, for cross-account delivery.
            </para>
             </li> <li> 
            <para>
            An Amazon Kinesis Firehose delivery stream that belongs to the same account as the
            subscription filter, for same-account delivery.
            </para>
             </li> <li> 
            <para>
            An AWS Lambda function that belongs to the same account as the subscription filter,
            for same-account delivery.
            </para>
             </li> </ul> 
            <para>
            There can only be one subscription filter associated with a log group. If you are
            updating an existing filter, you must specify the correct name in <code>filterName</code>.
            Otherwise, the call fails because you cannot associate a second filter with a log
            group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSubscriptionFilter service method.</param>
            
            <returns>The response from the PutSubscriptionFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutSubscriptionFilter">REST API Reference for PutSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.PutSubscriptionFilterAsync(Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutSubscriptionFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutSubscriptionFilter operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutSubscriptionFilter">REST API Reference for PutSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.TagLogGroup(Amazon.CloudWatchLogs.Model.TagLogGroupRequest)">
            <summary>
            Adds or updates the specified tags for the specified log group.
            
             
            <para>
            To list the tags for a log group, use <a>ListTagsLogGroup</a>. To remove tags, use
            <a>UntagLogGroup</a>.
            </para>
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/log-group-tagging.html">Tag
            Log Groups in Amazon CloudWatch Logs</a> in the <i>Amazon CloudWatch Logs User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagLogGroup service method.</param>
            
            <returns>The response from the TagLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TagLogGroup">REST API Reference for TagLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.TagLogGroupAsync(Amazon.CloudWatchLogs.Model.TagLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TagLogGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TagLogGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TagLogGroup">REST API Reference for TagLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.TestMetricFilter(Amazon.CloudWatchLogs.Model.TestMetricFilterRequest)">
            <summary>
            Tests the filter pattern of a metric filter against a sample of log event messages.
            You can use this operation to validate the correctness of a metric filter pattern.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestMetricFilter service method.</param>
            
            <returns>The response from the TestMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TestMetricFilter">REST API Reference for TestMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.TestMetricFilterAsync(Amazon.CloudWatchLogs.Model.TestMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TestMetricFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TestMetricFilter operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TestMetricFilter">REST API Reference for TestMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.UntagLogGroup(Amazon.CloudWatchLogs.Model.UntagLogGroupRequest)">
            <summary>
            Removes the specified tags from the specified log group.
            
             
            <para>
            To list the tags for a log group, use <a>ListTagsLogGroup</a>. To add tags, use <a>UntagLogGroup</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagLogGroup service method.</param>
            
            <returns>The response from the UntagLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UntagLogGroup">REST API Reference for UntagLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.AmazonCloudWatchLogsClient.UntagLogGroupAsync(Amazon.CloudWatchLogs.Model.UntagLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UntagLogGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UntagLogGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UntagLogGroup">REST API Reference for UntagLogGroup Operation</seealso>
        </member>
        <member name="T:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs">
             <summary>
             Interface for accessing CloudWatchLogs
            
             You can use Amazon CloudWatch Logs to monitor, store, and access your log files from
             Amazon EC2 instances, AWS CloudTrail, or other sources. You can then retrieve the
             associated log data from CloudWatch Logs using the CloudWatch console, CloudWatch
             Logs commands in the AWS CLI, CloudWatch Logs API, or CloudWatch Logs SDK.
             
              
             <para>
             You can use CloudWatch Logs to:
             </para>
              <ul> <li> 
             <para>
              <b>Monitor logs from EC2 instances in real-time</b>: You can use CloudWatch Logs
             to monitor applications and systems using log data. For example, CloudWatch Logs can
             track the number of errors that occur in your application logs and send you a notification
             whenever the rate of errors exceeds a threshold that you specify. CloudWatch Logs
             uses your log data for monitoring; so, no code changes are required. For example,
             you can monitor application logs for specific literal terms (such as "NullReferenceException")
             or count the number of occurrences of a literal term at a particular position in log
             data (such as "404" status codes in an Apache access log). When the term you are searching
             for is found, CloudWatch Logs reports the data to a CloudWatch metric that you specify.
             </para>
              </li> <li> 
             <para>
              <b>Monitor AWS CloudTrail logged events</b>: You can create alarms in CloudWatch
             and receive notifications of particular API activity as captured by CloudTrail and
             use the notification to perform troubleshooting.
             </para>
              </li> <li> 
             <para>
              <b>Archive log data</b>: You can use CloudWatch Logs to store your log data in highly
             durable storage. You can change the log retention setting so that any log events older
             than this setting are automatically deleted. The CloudWatch Logs agent makes it easy
             to quickly send both rotated and non-rotated log data off of a host and into the log
             service. You can then access the raw log data when you need it.
             </para>
              </li> </ul>
             </summary>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.AssociateKmsKey(Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest)">
            <summary>
            Associates the specified AWS Key Management Service (AWS KMS) customer master key
            (CMK) with the specified log group.
            
             
            <para>
            Associating an AWS KMS CMK with a log group overrides any existing associations between
            the log group and a CMK. After a CMK is associated with a log group, all newly ingested
            data for the log group is encrypted using the CMK. This association is stored as long
            as the data encrypted with the CMK is still within Amazon CloudWatch Logs. This enables
            Amazon CloudWatch Logs to decrypt this data whenever it is requested.
            </para>
             
            <para>
            Note that it can take up to 5 minutes for this operation to take effect.
            </para>
             
            <para>
            If you attempt to associate a CMK with a log group but the CMK does not exist or the
            CMK is disabled, you will receive an <code>InvalidParameterException</code> error.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the AssociateKmsKey service method.</param>
            
            <returns>The response from the AssociateKmsKey service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/AssociateKmsKey">REST API Reference for AssociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.AssociateKmsKeyAsync(Amazon.CloudWatchLogs.Model.AssociateKmsKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the AssociateKmsKey operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the AssociateKmsKey operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/AssociateKmsKey">REST API Reference for AssociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CancelExportTask(Amazon.CloudWatchLogs.Model.CancelExportTaskRequest)">
            <summary>
            Cancels the specified export task.
            
             
            <para>
            The task must be in the <code>PENDING</code> or <code>RUNNING</code> state.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CancelExportTask service method.</param>
            
            <returns>The response from the CancelExportTask service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidOperationException">
            The operation is not valid on the specified resource.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CancelExportTask">REST API Reference for CancelExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CancelExportTaskAsync(Amazon.CloudWatchLogs.Model.CancelExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CancelExportTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CancelExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CancelExportTask">REST API Reference for CancelExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CreateExportTask(Amazon.CloudWatchLogs.Model.CreateExportTaskRequest)">
            <summary>
            Creates an export task, which allows you to efficiently export data from a log group
            to an Amazon S3 bucket.
            
             
            <para>
            This is an asynchronous call. If all the required information is provided, this operation
            initiates an export task and responds with the ID of the task. After the task has
            started, you can use <a>DescribeExportTasks</a> to get the status of the export task.
            Each account can only have one active (<code>RUNNING</code> or <code>PENDING</code>)
            export task at a time. To cancel an export task, use <a>CancelExportTask</a>.
            </para>
             
            <para>
            You can export logs from multiple log groups or multiple time ranges to the same S3
            bucket. To separate out log data for each export task, you can specify a prefix to
            be used as the Amazon S3 key prefix for all exported objects.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateExportTask service method.</param>
            
            <returns>The response from the CreateExportTask service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateExportTask">REST API Reference for CreateExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CreateExportTaskAsync(Amazon.CloudWatchLogs.Model.CreateExportTaskRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateExportTask operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateExportTask operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateExportTask">REST API Reference for CreateExportTask Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CreateLogGroup(Amazon.CloudWatchLogs.Model.CreateLogGroupRequest)">
            <summary>
            Creates a log group with the specified name.
            
             
            <para>
            You can create up to 5000 log groups per account.
            </para>
             
            <para>
            You must use the following guidelines when naming a log group:
            </para>
             <ul> <li> 
            <para>
            Log group names must be unique within a region for an AWS account.
            </para>
             </li> <li> 
            <para>
            Log group names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            Log group names consist of the following characters: a-z, A-Z, 0-9, '_' (underscore),
            '-' (hyphen), '/' (forward slash), and '.' (period).
            </para>
             </li> </ul> 
            <para>
            If you associate a AWS Key Management Service (AWS KMS) customer master key (CMK)
            with the log group, ingested data is encrypted using the CMK. This association is
            stored as long as the data encrypted with the CMK is still within Amazon CloudWatch
            Logs. This enables Amazon CloudWatch Logs to decrypt this data whenever it is requested.
            </para>
             
            <para>
            If you attempt to associate a CMK with the log group but the CMK does not exist or
            the CMK is disabled, you will receive an <code>InvalidParameterException</code> error.
            
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLogGroup service method.</param>
            
            <returns>The response from the CreateLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogGroup">REST API Reference for CreateLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CreateLogGroupAsync(Amazon.CloudWatchLogs.Model.CreateLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLogGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLogGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogGroup">REST API Reference for CreateLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CreateLogStream(Amazon.CloudWatchLogs.Model.CreateLogStreamRequest)">
            <summary>
            Creates a log stream for the specified log group.
            
             
            <para>
            There is no limit on the number of log streams that you can create for a log group.
            </para>
             
            <para>
            You must use the following guidelines when naming a log stream:
            </para>
             <ul> <li> 
            <para>
            Log stream names must be unique within the log group.
            </para>
             </li> <li> 
            <para>
            Log stream names can be between 1 and 512 characters long.
            </para>
             </li> <li> 
            <para>
            The ':' (colon) and '*' (asterisk) characters are not allowed.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the CreateLogStream service method.</param>
            
            <returns>The response from the CreateLogStream service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceAlreadyExistsException">
            The specified resource already exists.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogStream">REST API Reference for CreateLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.CreateLogStreamAsync(Amazon.CloudWatchLogs.Model.CreateLogStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the CreateLogStream operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the CreateLogStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/CreateLogStream">REST API Reference for CreateLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteDestination(Amazon.CloudWatchLogs.Model.DeleteDestinationRequest)">
            <summary>
            Deletes the specified destination, and eventually disables all the subscription filters
            that publish to it. This operation does not delete the physical resource encapsulated
            by the destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteDestination service method.</param>
            
            <returns>The response from the DeleteDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDestination">REST API Reference for DeleteDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteDestinationAsync(Amazon.CloudWatchLogs.Model.DeleteDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteDestination operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteDestination operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteDestination">REST API Reference for DeleteDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteLogGroup(Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest)">
            <summary>
            Deletes the specified log group and permanently deletes all the archived log events
            associated with the log group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLogGroup service method.</param>
            
            <returns>The response from the DeleteLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogGroup">REST API Reference for DeleteLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteLogGroupAsync(Amazon.CloudWatchLogs.Model.DeleteLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLogGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLogGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogGroup">REST API Reference for DeleteLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteLogStream(Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest)">
            <summary>
            Deletes the specified log stream and permanently deletes all the archived log events
            associated with the log stream.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteLogStream service method.</param>
            
            <returns>The response from the DeleteLogStream service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogStream">REST API Reference for DeleteLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteLogStreamAsync(Amazon.CloudWatchLogs.Model.DeleteLogStreamRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteLogStream operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteLogStream operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteLogStream">REST API Reference for DeleteLogStream Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteMetricFilter(Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest)">
            <summary>
            Deletes the specified metric filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteMetricFilter service method.</param>
            
            <returns>The response from the DeleteMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteMetricFilter">REST API Reference for DeleteMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteMetricFilterAsync(Amazon.CloudWatchLogs.Model.DeleteMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteMetricFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteMetricFilter operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteMetricFilter">REST API Reference for DeleteMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteResourcePolicy(Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest)">
            <summary>
            Deletes a resource policy from this account. This revokes the access of the identities
            in that policy to put log events to this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy service method.</param>
            
            <returns>The response from the DeleteResourcePolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteResourcePolicyAsync(Amazon.CloudWatchLogs.Model.DeleteResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteResourcePolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteResourcePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteResourcePolicy">REST API Reference for DeleteResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteRetentionPolicy(Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest)">
            <summary>
            Deletes the specified retention policy.
            
             
            <para>
            Log events do not expire if they belong to log groups without a retention policy.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteRetentionPolicy service method.</param>
            
            <returns>The response from the DeleteRetentionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteRetentionPolicy">REST API Reference for DeleteRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteRetentionPolicyAsync(Amazon.CloudWatchLogs.Model.DeleteRetentionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteRetentionPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteRetentionPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteRetentionPolicy">REST API Reference for DeleteRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteSubscriptionFilter(Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest)">
            <summary>
            Deletes the specified subscription filter.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DeleteSubscriptionFilter service method.</param>
            
            <returns>The response from the DeleteSubscriptionFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteSubscriptionFilter">REST API Reference for DeleteSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DeleteSubscriptionFilterAsync(Amazon.CloudWatchLogs.Model.DeleteSubscriptionFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DeleteSubscriptionFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DeleteSubscriptionFilter operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DeleteSubscriptionFilter">REST API Reference for DeleteSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeDestinations(Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest)">
            <summary>
            Lists all your destinations. The results are ASCII-sorted by destination name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeDestinations service method.</param>
            
            <returns>The response from the DescribeDestinations service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDestinations">REST API Reference for DescribeDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeDestinationsAsync(Amazon.CloudWatchLogs.Model.DescribeDestinationsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeDestinations operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeDestinations operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeDestinations">REST API Reference for DescribeDestinations Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeExportTasks(Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest)">
            <summary>
            Lists the specified export tasks. You can list all your export tasks or filter the
            results based on task ID or task status.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks service method.</param>
            
            <returns>The response from the DescribeExportTasks service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeExportTasks">REST API Reference for DescribeExportTasks Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeExportTasksAsync(Amazon.CloudWatchLogs.Model.DescribeExportTasksRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeExportTasks operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeExportTasks operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeExportTasks">REST API Reference for DescribeExportTasks Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeLogGroups">
            <summary>
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            </summary>
            
            <returns>The response from the DescribeLogGroups service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeLogGroups(Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest)">
            <summary>
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLogGroups service method.</param>
            
            <returns>The response from the DescribeLogGroups service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeLogGroupsAsync(System.Threading.CancellationToken)">
            <summary>
            Lists the specified log groups. You can list all your log groups or filter the results
            by prefix. The results are ASCII-sorted by log group name.
            </summary>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            
            <returns>The response from the DescribeLogGroups service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeLogGroupsAsync(Amazon.CloudWatchLogs.Model.DescribeLogGroupsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLogGroups operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLogGroups operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogGroups">REST API Reference for DescribeLogGroups Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeLogStreams(Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest)">
            <summary>
            Lists the log streams for the specified log group. You can list all the log streams
            or filter the results by prefix. You can also control how the results are ordered.
            
             
            <para>
            This operation has a limit of five transactions per second, after which transactions
            are throttled.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeLogStreams service method.</param>
            
            <returns>The response from the DescribeLogStreams service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogStreams">REST API Reference for DescribeLogStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeLogStreamsAsync(Amazon.CloudWatchLogs.Model.DescribeLogStreamsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeLogStreams operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeLogStreams operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeLogStreams">REST API Reference for DescribeLogStreams Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeMetricFilters(Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest)">
            <summary>
            Lists the specified metric filters. You can list all the metric filters or filter
            the results by log name, prefix, metric name, or metric namespace. The results are
            ASCII-sorted by filter name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeMetricFilters service method.</param>
            
            <returns>The response from the DescribeMetricFilters service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeMetricFilters">REST API Reference for DescribeMetricFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeMetricFiltersAsync(Amazon.CloudWatchLogs.Model.DescribeMetricFiltersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeMetricFilters operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeMetricFilters operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeMetricFilters">REST API Reference for DescribeMetricFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeResourcePolicies(Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest)">
            <summary>
            Lists the resource policies in this account.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeResourcePolicies service method.</param>
            
            <returns>The response from the DescribeResourcePolicies service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeResourcePolicies">REST API Reference for DescribeResourcePolicies Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeResourcePoliciesAsync(Amazon.CloudWatchLogs.Model.DescribeResourcePoliciesRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeResourcePolicies operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeResourcePolicies operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeResourcePolicies">REST API Reference for DescribeResourcePolicies Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeSubscriptionFilters(Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest)">
            <summary>
            Lists the subscription filters for the specified log group. You can list all the subscription
            filters or filter the results by prefix. The results are ASCII-sorted by filter name.
            </summary>
            <param name="request">Container for the necessary parameters to execute the DescribeSubscriptionFilters service method.</param>
            
            <returns>The response from the DescribeSubscriptionFilters service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeSubscriptionFilters">REST API Reference for DescribeSubscriptionFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DescribeSubscriptionFiltersAsync(Amazon.CloudWatchLogs.Model.DescribeSubscriptionFiltersRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DescribeSubscriptionFilters operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DescribeSubscriptionFilters operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DescribeSubscriptionFilters">REST API Reference for DescribeSubscriptionFilters Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DisassociateKmsKey(Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest)">
            <summary>
            Disassociates the associated AWS Key Management Service (AWS KMS) customer master
            key (CMK) from the specified log group.
            
             
            <para>
            After the AWS KMS CMK is disassociated from the log group, AWS CloudWatch Logs stops
            encrypting newly ingested data for the log group. All previously ingested data remains
            encrypted, and AWS CloudWatch Logs requires permissions for the CMK whenever the encrypted
            data is requested.
            </para>
             
            <para>
            Note that it can take up to 5 minutes for this operation to take effect.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the DisassociateKmsKey service method.</param>
            
            <returns>The response from the DisassociateKmsKey service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DisassociateKmsKey">REST API Reference for DisassociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.DisassociateKmsKeyAsync(Amazon.CloudWatchLogs.Model.DisassociateKmsKeyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the DisassociateKmsKey operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the DisassociateKmsKey operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/DisassociateKmsKey">REST API Reference for DisassociateKmsKey Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.FilterLogEvents(Amazon.CloudWatchLogs.Model.FilterLogEventsRequest)">
            <summary>
            Lists log events from the specified log group. You can list all the log events or
            filter the results using a filter pattern, a time range, and the name of the log stream.
            
             
            <para>
            By default, this operation returns as many log events as can fit in 1 MB (up to 10,000
            log events), or all the events found within the time range that you specify. If the
            results include a token, then there are more log events available, and you can get
            additional results by specifying the token in a subsequent call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the FilterLogEvents service method.</param>
            
            <returns>The response from the FilterLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/FilterLogEvents">REST API Reference for FilterLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.FilterLogEventsAsync(Amazon.CloudWatchLogs.Model.FilterLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the FilterLogEvents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the FilterLogEvents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/FilterLogEvents">REST API Reference for FilterLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetLogEvents(Amazon.CloudWatchLogs.Model.GetLogEventsRequest)">
            <summary>
            Lists log events from the specified log stream. You can list all the log events or
            filter using a time range.
            
             
            <para>
            By default, this operation returns as many log events as can fit in a response size
            of 1MB (up to 10,000 log events). You can get additional log events by specifying
            one of the tokens in a subsequent call.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the GetLogEvents service method.</param>
            
            <returns>The response from the GetLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogEvents">REST API Reference for GetLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.GetLogEventsAsync(Amazon.CloudWatchLogs.Model.GetLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the GetLogEvents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the GetLogEvents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/GetLogEvents">REST API Reference for GetLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.ListTagsLogGroup(Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest)">
            <summary>
            Lists the tags for the specified log group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the ListTagsLogGroup service method.</param>
            
            <returns>The response from the ListTagsLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListTagsLogGroup">REST API Reference for ListTagsLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.ListTagsLogGroupAsync(Amazon.CloudWatchLogs.Model.ListTagsLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the ListTagsLogGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the ListTagsLogGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/ListTagsLogGroup">REST API Reference for ListTagsLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutDestination(Amazon.CloudWatchLogs.Model.PutDestinationRequest)">
            <summary>
            Creates or updates a destination. A destination encapsulates a physical resource (such
            as an Amazon Kinesis stream) and enables you to subscribe to a real-time stream of
            log events for a different account, ingested using <a>PutLogEvents</a>. Currently,
            the only supported physical resource is a Kinesis stream belonging to the same account
            as the destination.
            
             
            <para>
            Through an access policy, a destination controls what is written to its Kinesis stream.
            By default, <code>PutDestination</code> does not set any access policy with the destination,
            which means a cross-account user cannot call <a>PutSubscriptionFilter</a> against
            this destination. To enable this, the destination owner must call <a>PutDestinationPolicy</a>
            after <code>PutDestination</code>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDestination service method.</param>
            
            <returns>The response from the PutDestination service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestination">REST API Reference for PutDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutDestinationAsync(Amazon.CloudWatchLogs.Model.PutDestinationRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutDestination operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutDestination operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestination">REST API Reference for PutDestination Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutDestinationPolicy(Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest)">
            <summary>
            Creates or updates an access policy associated with an existing destination. An access
            policy is an <a href="http://docs.aws.amazon.com/IAM/latest/UserGuide/policies_overview.html">IAM
            policy document</a> that is used to authorize claims to register a subscription filter
            against a given destination.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutDestinationPolicy service method.</param>
            
            <returns>The response from the PutDestinationPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestinationPolicy">REST API Reference for PutDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutDestinationPolicyAsync(Amazon.CloudWatchLogs.Model.PutDestinationPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutDestinationPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutDestinationPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutDestinationPolicy">REST API Reference for PutDestinationPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutLogEvents(Amazon.CloudWatchLogs.Model.PutLogEventsRequest)">
            <summary>
            Uploads a batch of log events to the specified log stream.
            
             
            <para>
            You must include the sequence token obtained from the response of the previous call.
            An upload in a newly created log stream does not require a sequence token. You can
            also get the sequence token using <a>DescribeLogStreams</a>. If you call <code>PutLogEvents</code>
            twice within a narrow time period using the same value for <code>sequenceToken</code>,
            both calls may be successful, or one may be rejected.
            </para>
             
            <para>
            The batch of events must satisfy the following constraints:
            </para>
             <ul> <li> 
            <para>
            The maximum batch size is 1,048,576 bytes, and this size is calculated as the sum
            of all event messages in UTF-8, plus 26 bytes for each log event.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be more than 2 hours in the future.
            </para>
             </li> <li> 
            <para>
            None of the log events in the batch can be older than 14 days or the retention period
            of the log group.
            </para>
             </li> <li> 
            <para>
            The log events in the batch must be in chronological ordered by their time stamp (the
            time the event occurred, expressed as the number of milliseconds after Jan 1, 1970
            00:00:00 UTC).
            </para>
             </li> <li> 
            <para>
            The maximum number of log events in a batch is 10,000.
            </para>
             </li> <li> 
            <para>
            A batch of log events in a single request cannot span more than 24 hours. Otherwise,
            the operation fails.
            </para>
             </li> </ul>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutLogEvents service method.</param>
            
            <returns>The response from the PutLogEvents service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.DataAlreadyAcceptedException">
            The event was already logged.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidSequenceTokenException">
            The sequence token is not valid.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutLogEvents">REST API Reference for PutLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutLogEventsAsync(Amazon.CloudWatchLogs.Model.PutLogEventsRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutLogEvents operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutLogEvents operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutLogEvents">REST API Reference for PutLogEvents Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutMetricFilter(Amazon.CloudWatchLogs.Model.PutMetricFilterRequest)">
            <summary>
            Creates or updates a metric filter and associates it with the specified log group.
            Metric filters allow you to configure rules to extract metric data from log events
            ingested through <a>PutLogEvents</a>.
            
             
            <para>
            The maximum number of metric filters that can be associated with a log group is 100.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutMetricFilter service method.</param>
            
            <returns>The response from the PutMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutMetricFilter">REST API Reference for PutMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutMetricFilterAsync(Amazon.CloudWatchLogs.Model.PutMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutMetricFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutMetricFilter operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutMetricFilter">REST API Reference for PutMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutResourcePolicy(Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest)">
            <summary>
            Creates or updates a resource policy allowing other AWS services to put log events
            to this account, such as Amazon Route 53. An account can have up to 50 resource policies
            per region.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy service method.</param>
            
            <returns>The response from the PutResourcePolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutResourcePolicyAsync(Amazon.CloudWatchLogs.Model.PutResourcePolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutResourcePolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutResourcePolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutResourcePolicy">REST API Reference for PutResourcePolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutRetentionPolicy(Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest)">
            <summary>
            Sets the retention of the specified log group. A retention policy allows you to configure
            the number of days for which to retain log events in the specified log group.
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutRetentionPolicy service method.</param>
            
            <returns>The response from the PutRetentionPolicy service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutRetentionPolicy">REST API Reference for PutRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutRetentionPolicyAsync(Amazon.CloudWatchLogs.Model.PutRetentionPolicyRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutRetentionPolicy operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutRetentionPolicy operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutRetentionPolicy">REST API Reference for PutRetentionPolicy Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutSubscriptionFilter(Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest)">
            <summary>
            Creates or updates a subscription filter and associates it with the specified log
            group. Subscription filters allow you to subscribe to a real-time stream of log events
            ingested through <a>PutLogEvents</a> and have them delivered to a specific destination.
            Currently, the supported destinations are:
            
             <ul> <li> 
            <para>
            An Amazon Kinesis stream belonging to the same account as the subscription filter,
            for same-account delivery.
            </para>
             </li> <li> 
            <para>
            A logical destination that belongs to a different account, for cross-account delivery.
            </para>
             </li> <li> 
            <para>
            An Amazon Kinesis Firehose delivery stream that belongs to the same account as the
            subscription filter, for same-account delivery.
            </para>
             </li> <li> 
            <para>
            An AWS Lambda function that belongs to the same account as the subscription filter,
            for same-account delivery.
            </para>
             </li> </ul> 
            <para>
            There can only be one subscription filter associated with a log group. If you are
            updating an existing filter, you must specify the correct name in <code>filterName</code>.
            Otherwise, the call fails because you cannot associate a second filter with a log
            group.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the PutSubscriptionFilter service method.</param>
            
            <returns>The response from the PutSubscriptionFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.LimitExceededException">
            You have reached the maximum number of resources that can be created.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.OperationAbortedException">
            Multiple requests to update the same resource were in conflict.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutSubscriptionFilter">REST API Reference for PutSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.PutSubscriptionFilterAsync(Amazon.CloudWatchLogs.Model.PutSubscriptionFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the PutSubscriptionFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the PutSubscriptionFilter operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/PutSubscriptionFilter">REST API Reference for PutSubscriptionFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.TagLogGroup(Amazon.CloudWatchLogs.Model.TagLogGroupRequest)">
            <summary>
            Adds or updates the specified tags for the specified log group.
            
             
            <para>
            To list the tags for a log group, use <a>ListTagsLogGroup</a>. To remove tags, use
            <a>UntagLogGroup</a>.
            </para>
             
            <para>
            For more information about tags, see <a href="http://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/log-group-tagging.html">Tag
            Log Groups in Amazon CloudWatch Logs</a> in the <i>Amazon CloudWatch Logs User Guide</i>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the TagLogGroup service method.</param>
            
            <returns>The response from the TagLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TagLogGroup">REST API Reference for TagLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.TagLogGroupAsync(Amazon.CloudWatchLogs.Model.TagLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TagLogGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TagLogGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TagLogGroup">REST API Reference for TagLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.TestMetricFilter(Amazon.CloudWatchLogs.Model.TestMetricFilterRequest)">
            <summary>
            Tests the filter pattern of a metric filter against a sample of log event messages.
            You can use this operation to validate the correctness of a metric filter pattern.
            </summary>
            <param name="request">Container for the necessary parameters to execute the TestMetricFilter service method.</param>
            
            <returns>The response from the TestMetricFilter service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.InvalidParameterException">
            A parameter is specified incorrectly.
            </exception>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ServiceUnavailableException">
            The service cannot complete the request.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TestMetricFilter">REST API Reference for TestMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.TestMetricFilterAsync(Amazon.CloudWatchLogs.Model.TestMetricFilterRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the TestMetricFilter operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the TestMetricFilter operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/TestMetricFilter">REST API Reference for TestMetricFilter Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.UntagLogGroup(Amazon.CloudWatchLogs.Model.UntagLogGroupRequest)">
            <summary>
            Removes the specified tags from the specified log group.
            
             
            <para>
            To list the tags for a log group, use <a>ListTagsLogGroup</a>. To add tags, use <a>UntagLogGroup</a>.
            </para>
            </summary>
            <param name="request">Container for the necessary parameters to execute the UntagLogGroup service method.</param>
            
            <returns>The response from the UntagLogGroup service method, as returned by CloudWatchLogs.</returns>
            <exception cref="T:Amazon.CloudWatchLogs.Model.ResourceNotFoundException">
            The specified resource does not exist.
            </exception>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UntagLogGroup">REST API Reference for UntagLogGroup Operation</seealso>
        </member>
        <member name="M:Amazon.CloudWatchLogs.IAmazonCloudWatchLogs.UntagLogGroupAsync(Amazon.CloudWatchLogs.Model.UntagLogGroupRequest,System.Threading.CancellationToken)">
            <summary>
            Initiates the asynchronous execution of the UntagLogGroup operation.
            </summary>
            
            <param name="request">Container for the necessary parameters to execute the UntagLogGroup operation.</param>
            <param name="cancellationToken">
                A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <returns>The task object representing the asynchronous operation.</returns>
            <seealso href="http://docs.aws.amazon.com/goto/WebAPI/logs-2014-03-28/UntagLogGroup">REST API Reference for UntagLogGroup Operation</seealso>
        </member>
    </members>
</doc>
